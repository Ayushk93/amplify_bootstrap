{"map":"{\"version\":3,\"sources\":[\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/AuthenticationDetails.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/BigInteger.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/AuthenticationHelper.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/CognitoJwtToken.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/CognitoAccessToken.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/CognitoIdToken.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/CognitoRefreshToken.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/CognitoUserSession.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/DateHelper.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/CognitoUserAttribute.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/StorageHelper.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/CognitoUser.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/UserAgent.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/Client.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/CognitoUserPool.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/CookieStorage.js\",\"/home/ayush/Documents/react-boilerplate/node_modules/amazon-cognito-identity-js/es/index.js\"],\"names\":[\"dbits\",\"AuthenticationDetails\",\"data\",\"_ref\",\"ValidationData\",\"Username\",\"Password\",\"AuthParameters\",\"ClientMetadata\",\"this\",\"validationData\",\"authParameters\",\"clientMetadata\",\"username\",\"password\",\"_proto\",\"prototype\",\"getUsername\",\"getPassword\",\"getValidationData\",\"getAuthParameters\",\"getClientMetadata\",\"BigInteger\",\"BigInteger_BigInteger\",\"a\",\"b\",\"fromString\",\"nbi\",\"inBrowser\",\"navigator\",\"appName\",\"am\",\"i\",\"x\",\"w\",\"j\",\"c\",\"n\",\"xl\",\"xh\",\"l\",\"h\",\"m\",\"v\",\"Math\",\"floor\",\"DB\",\"DM\",\"DV\",\"FV\",\"pow\",\"F1\",\"F2\",\"rr\",\"vv\",\"BI_RM\",\"BI_RC\",\"Array\",\"charCodeAt\",\"int2char\",\"charAt\",\"intAt\",\"s\",\"nbv\",\"r\",\"fromInt\",\"nbits\",\"t\",\"Montgomery\",\"mp\",\"invDigit\",\"mpl\",\"mph\",\"um\",\"mt2\",\"convert\",\"abs\",\"dlShiftTo\",\"divRemTo\",\"compareTo\",\"ZERO\",\"subTo\",\"revert\",\"copyTo\",\"reduce\",\"u0\",\"clamp\",\"drShiftTo\",\"mulTo\",\"y\",\"multiplyTo\",\"sqrTo\",\"squareTo\",\"k\",\"Error\",\"length\",\"mi\",\"sh\",\"max\",\"lShiftTo\",\"bs\",\"cbs\",\"bm\",\"ds\",\"rShiftTo\",\"min\",\"q\",\"pm\",\"pt\",\"ts\",\"ms\",\"nsh\",\"ys\",\"y0\",\"yt\",\"d1\",\"d2\",\"e\",\"ONE\",\"qd\",\"addTo\",\"toString\",\"negate\",\"d\",\"km\",\"p\",\"bitLength\",\"mod\",\"equals\",\"add\",\"subtract\",\"multiply\",\"divide\",\"modPow\",\"callback\",\"z\",\"g\",\"k1\",\"g2\",\"is1\",\"r2\",\"result\",\"AuthenticationHelper_randomBytes\",\"nBytes\",\"buffer\",\"from\",\"core_default\",\"lib\",\"WordArray\",\"random\",\"initN\",\"AuthenticationHelper_AuthenticationHelper\",\"AuthenticationHelper\",\"PoolName\",\"N\",\"hexHash\",\"smallAValue\",\"generateRandomSmallA\",\"getLargeAValue\",\"infoBits\",\"poolName\",\"getSmallAValue\",\"_this\",\"largeAValue\",\"calculateA\",\"err\",\"hexRandom\",\"generateRandomString\",\"getRandomPassword\",\"randomPassword\",\"getSaltDevices\",\"SaltToHashDevices\",\"getVerifierDevices\",\"verifierDevices\",\"generateHashDevice\",\"deviceGroupKey\",\"_this2\",\"combinedString\",\"hashedString\",\"hash\",\"padHex\",\"verifierDevicesNotPadded\",\"_this3\",\"A\",\"calculateU\",\"B\",\"UHexHash\",\"buf\",\"str\",\"create\",\"hashHex\",\"sha256_default\",\"join\",\"hexStr\",\"computehkdf\",\"ikm\",\"salt\",\"infoBitsWordArray\",\"concat\",\"String\",\"fromCharCode\",\"ikmWordArray\",\"saltWordArray\",\"prk\",\"hmac_sha256_default\",\"hmac\",\"slice\",\"getPasswordAuthenticationKey\",\"serverBValue\",\"_this4\",\"UValue\",\"usernamePassword\",\"usernamePasswordHash\",\"xValue\",\"calculateS\",\"sValue\",\"hkdf\",\"_this5\",\"gModPowXN\",\"err2\",\"getNewPasswordRequiredChallengeUserAttributePrefix\",\"bigInt\",\"hashStr\",\"indexOf\",\"CognitoJwtToken_CognitoJwtToken\",\"CognitoJwtToken\",\"token\",\"jwtToken\",\"payload\",\"decodePayload\",\"getJwtToken\",\"getExpiration\",\"exp\",\"getIssuedAt\",\"iat\",\"split\",\"JSON\",\"parse\",\"CognitoAccessToken\",\"_CognitoJwtToken\",\"subClass\",\"superClass\",\"_temp\",\"AccessToken\",\"call\",\"Object\",\"constructor\",\"__proto__\",\"CognitoIdToken\",\"IdToken\",\"CognitoRefreshToken\",\"RefreshToken\",\"getToken\",\"CognitoUserSession\",\"ClockDrift\",\"idToken\",\"refreshToken\",\"accessToken\",\"clockDrift\",\"undefined\",\"calculateClockDrift\",\"getIdToken\",\"getRefreshToken\",\"getAccessToken\",\"getClockDrift\",\"Date\",\"isValid\",\"adjusted\",\"monthNames\",\"weekNames\",\"DateHelper\",\"getNowString\",\"now\",\"weekDay\",\"getUTCDay\",\"month\",\"getUTCMonth\",\"day\",\"getUTCDate\",\"hours\",\"getUTCHours\",\"minutes\",\"getUTCMinutes\",\"seconds\",\"getUTCSeconds\",\"getUTCFullYear\",\"CognitoUserAttribute\",\"Name\",\"Value\",\"getValue\",\"setValue\",\"value\",\"getName\",\"setName\",\"name\",\"stringify\",\"toJSON\",\"dataMemory\",\"MemoryStorage\",\"setItem\",\"key\",\"getItem\",\"hasOwnProperty\",\"removeItem\",\"clear\",\"StorageHelper\",\"storageWindow\",\"window\",\"localStorage\",\"exception\",\"getStorage\",\"userAgent\",\"CognitoUser_CognitoUser\",\"CognitoUser\",\"Pool\",\"pool\",\"Session\",\"client\",\"signInUserSession\",\"authenticationFlowType\",\"storage\",\"Storage\",\"keyPrefix\",\"getClientId\",\"userDataKey\",\"setSignInUserSession\",\"clearCachedUserData\",\"cacheTokens\",\"getSignInUserSession\",\"getAuthenticationFlowType\",\"setAuthenticationFlowType\",\"initiateAuth\",\"authDetails\",\"USERNAME\",\"clientMetaData\",\"keys\",\"jsonReq\",\"AuthFlow\",\"ClientId\",\"getUserContextData\",\"UserContextData\",\"request\",\"onFailure\",\"challengeName\",\"ChallengeName\",\"challengeParameters\",\"ChallengeParameters\",\"customChallenge\",\"getCognitoUserSession\",\"AuthenticationResult\",\"onSuccess\",\"authenticateUser\",\"authenticateUserPlainUsernamePassword\",\"authenticateUserDefaultAuth\",\"authenticationHelper\",\"getUserPoolId\",\"dateHelper\",\"deviceKey\",\"DEVICE_KEY\",\"errOnAValue\",\"aValue\",\"SRP_A\",\"CHALLENGE_NAME\",\"USER_ID_FOR_SRP\",\"SRP_B\",\"SALT\",\"getCachedDeviceKeyAndPassword\",\"errOnHkdf\",\"dateNow\",\"message\",\"SECRET_BLOCK\",\"signatureString\",\"enc_base64_default\",\"challengeResponses\",\"PASSWORD_CLAIM_SECRET_BLOCK\",\"TIMESTAMP\",\"PASSWORD_CLAIM_SIGNATURE\",\"jsonReqResp\",\"ChallengeResponses\",\"respondToAuthChallenge\",\"challenge\",\"challengeCallback\",\"errChallenge\",\"dataChallenge\",\"code\",\"toLowerCase\",\"clearCachedDeviceKeyAndPassword\",\"errAuthenticate\",\"dataAuthenticate\",\"authenticateUserInternal\",\"PASSWORD\",\"authResult\",\"mfaRequired\",\"selectMFAType\",\"mfaSetup\",\"totpRequired\",\"userAttributes\",\"rawRequiredAttributes\",\"requiredAttributes\",\"userAttributesPrefix\",\"substr\",\"newPasswordRequired\",\"newDeviceMetadata\",\"NewDeviceMetadata\",\"DeviceGroupKey\",\"DeviceKey\",\"errGenHash\",\"deviceSecretVerifierConfig\",\"Salt\",\"PasswordVerifier\",\"DeviceSecretVerifierConfig\",\"DeviceName\",\"errConfirm\",\"dataConfirm\",\"cacheDeviceKeyAndPassword\",\"UserConfirmationNecessary\",\"getDeviceResponse\",\"completeNewPasswordChallenge\",\"newPassword\",\"requiredAttributeData\",\"finalUserAttributes\",\"forEach\",\"NEW_PASSWORD\",\"_this6\",\"errAValue\",\"errHkdf\",\"confirmRegistration\",\"confirmationCode\",\"forceAliasCreation\",\"ConfirmationCode\",\"ForceAliasCreation\",\"sendCustomChallengeAnswer\",\"answerChallenge\",\"_this7\",\"ANSWER\",\"sendMFACode\",\"mfaType\",\"_this8\",\"SMS_MFA_CODE\",\"mfaTypeSelection\",\"SOFTWARE_TOKEN_MFA_CODE\",\"changePassword\",\"oldUserPassword\",\"newUserPassword\",\"PreviousPassword\",\"ProposedPassword\",\"enableMFA\",\"mfaOptions\",\"push\",\"DeliveryMedium\",\"AttributeName\",\"MFAOptions\",\"setUserMfaPreference\",\"smsMfaSettings\",\"softwareTokenMfaSettings\",\"SMSMfaSettings\",\"SoftwareTokenMfaSettings\",\"disableMFA\",\"deleteUser\",\"_this9\",\"clearCachedUser\",\"updateAttributes\",\"attributes\",\"_this10\",\"UserAttributes\",\"getUserData\",\"bypassCache\",\"getUserAttributes\",\"userData\",\"attributeList\",\"attribute\",\"userAttribute\",\"getMFAOptions\",\"params\",\"_this11\",\"latestUserData\",\"cacheUserData\",\"refresh\",\"refreshSession\",\"refreshError\",\"deleteAttributes\",\"UserAttributeNames\",\"resendConfirmationCode\",\"getSession\",\"idTokenKey\",\"accessTokenKey\",\"refreshTokenKey\",\"clockDriftKey\",\"parseInt\",\"cachedSession\",\"_this12\",\"REFRESH_TOKEN\",\"lastUserKey\",\"deviceKeyKey\",\"authenticationResult\",\"clearCachedTokens\",\"randomPasswordKey\",\"deviceGroupKeyKey\",\"forgotPassword\",\"inputVerificationCode\",\"confirmPassword\",\"getAttributeVerificationCode\",\"attributeName\",\"verifyAttribute\",\"Code\",\"getDevice\",\"forgetSpecificDevice\",\"forgetDevice\",\"_this13\",\"setDeviceStatusRemembered\",\"DeviceRememberedStatus\",\"setDeviceStatusNotRemembered\",\"listDevices\",\"limit\",\"paginationToken\",\"Limit\",\"PaginationToken\",\"globalSignOut\",\"_this14\",\"signOut\",\"sendMFASelectionAnswer\",\"_this15\",\"associateSoftwareToken\",\"_this16\",\"associateSecretCode\",\"SecretCode\",\"verifySoftwareToken\",\"totpCode\",\"friendlyDeviceName\",\"_this17\",\"UserCode\",\"FriendlyDeviceName\",\"errRespond\",\"dataRespond\",\"UserAgent\",\"appendToCognitoUserAgent\",\"content\",\"includes\",\"es_UserAgent\",\"Client_Client\",\"Client\",\"region\",\"endpoint\",\"operation\",\"response\",\"options\",\"headers\",\"Content-Type\",\"X-Amz-Target\",\"X-Amz-User-Agent\",\"method\",\"mode\",\"cache\",\"body\",\"fetch\",\"then\",\"resp\",\"TypeError\",\"json\",\"ok\",\"__type\",\"pop\",\"error\",\"Message\",\"get\",\"_error\",\"statusCode\",\"status\",\"ex\",\"CognitoUserPool_CognitoUserPool\",\"CognitoUserPool\",\"UserPoolId\",\"AdvancedSecurityDataCollectionFlag\",\"test\",\"userPoolId\",\"clientId\",\"advancedSecurityDataCollectionFlag\",\"signUp\",\"cognitoUser\",\"returnData\",\"user\",\"userConfirmed\",\"UserConfirmed\",\"userSub\",\"UserSub\",\"codeDeliveryDetails\",\"CodeDeliveryDetails\",\"getCurrentUser\",\"lastAuthUser\",\"AmazonCognitoAdvancedSecurityData\",\"amazonCognitoAdvancedSecurityDataConst\",\"advancedSecurityData\",\"getData\",\"EncodedData\",\"CookieStorage_CookieStorage\",\"CookieStorage\",\"domain\",\"path\",\"expires\",\"secure\",\"js_cookie\",\"index\",\"cookies\",\"__webpack_require__\",\"__webpack_exports__\"],\"mappings\":\"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\",\"sourcesContent\":[\"/*!\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/** @class */\\nvar AuthenticationDetails = /*#__PURE__*/function () {\\n  /**\\n   * Constructs a new AuthenticationDetails object\\n   * @param {object=} data Creation options.\\n   * @param {string} data.Username User being authenticated.\\n   * @param {string} data.Password Plain-text password to authenticate with.\\n   * @param {(AttributeArg[])?} data.ValidationData Application extra metadata.\\n   * @param {(AttributeArg[])?} data.AuthParamaters Authentication paramaters for custom auth.\\n   */\\n  function AuthenticationDetails(data) {\\n    var _ref = data || {},\\n        ValidationData = _ref.ValidationData,\\n        Username = _ref.Username,\\n        Password = _ref.Password,\\n        AuthParameters = _ref.AuthParameters,\\n        ClientMetadata = _ref.ClientMetadata;\\n\\n    this.validationData = ValidationData || {};\\n    this.authParameters = AuthParameters || {};\\n    this.clientMetadata = ClientMetadata || {};\\n    this.username = Username;\\n    this.password = Password;\\n  }\\n  /**\\n   * @returns {string} the record's username\\n   */\\n\\n\\n  var _proto = AuthenticationDetails.prototype;\\n\\n  _proto.getUsername = function getUsername() {\\n    return this.username;\\n  }\\n  /**\\n   * @returns {string} the record's password\\n   */\\n  ;\\n\\n  _proto.getPassword = function getPassword() {\\n    return this.password;\\n  }\\n  /**\\n   * @returns {Array} the record's validationData\\n   */\\n  ;\\n\\n  _proto.getValidationData = function getValidationData() {\\n    return this.validationData;\\n  }\\n  /**\\n   * @returns {Array} the record's authParameters\\n   */\\n  ;\\n\\n  _proto.getAuthParameters = function getAuthParameters() {\\n    return this.authParameters;\\n  }\\n  /**\\n   * @returns {ClientMetadata} the clientMetadata for a Lambda trigger\\n   */\\n  ;\\n\\n  _proto.getClientMetadata = function getClientMetadata() {\\n    return this.clientMetadata;\\n  };\\n\\n  return AuthenticationDetails;\\n}();\\n\\nexport { AuthenticationDetails as default };\",\"// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\\n//\\n// All public methods have been removed except the following:\\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\\n//   negate\\n//   abs\\n//   compareTo\\n//   bitLength\\n//   mod\\n//   equals\\n//   add\\n//   subtract\\n//   multiply\\n//   divide\\n//   modPow\\nexport default BigInteger;\\n/*\\n * Copyright (c) 2003-2005  Tom Wu\\n * All Rights Reserved.\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining\\n * a copy of this software and associated documentation files (the\\n * \\\"Software\\\"), to deal in the Software without restriction, including\\n * without limitation the rights to use, copy, modify, merge, publish,\\n * distribute, sublicense, and/or sell copies of the Software, and to\\n * permit persons to whom the Software is furnished to do so, subject to\\n * the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be\\n * included in all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS-IS\\\" AND WITHOUT WARRANTY OF ANY KIND,\\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\\n *\\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\\n *\\n * In addition, the following condition applies:\\n *\\n * All redistributions must retain an intact copy of this copyright notice\\n * and disclaimer.\\n */\\n// (public) Constructor\\n\\nfunction BigInteger(a, b) {\\n  if (a != null) this.fromString(a, b);\\n} // return new, unset BigInteger\\n\\n\\nfunction nbi() {\\n  return new BigInteger(null);\\n} // Bits per digit\\n\\n\\nvar dbits; // JavaScript engine analysis\\n\\nvar canary = 0xdeadbeefcafe;\\nvar j_lm = (canary & 0xffffff) == 0xefcafe; // am: Compute w_j += (x*this_i), propagate carries,\\n// c is initial carry, returns final carry.\\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\\n// We need to select the fastest one that works in this environment.\\n// am1: use a single mult and divide to get the high bits,\\n// max digit bits should be 26 because\\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\\n\\nfunction am1(i, x, w, j, c, n) {\\n  while (--n >= 0) {\\n    var v = x * this[i++] + w[j] + c;\\n    c = Math.floor(v / 0x4000000);\\n    w[j++] = v & 0x3ffffff;\\n  }\\n\\n  return c;\\n} // am2 avoids a big mult-and-extract completely.\\n// Max digit bits should be <= 30 because we do bitwise ops\\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\\n\\n\\nfunction am2(i, x, w, j, c, n) {\\n  var xl = x & 0x7fff,\\n      xh = x >> 15;\\n\\n  while (--n >= 0) {\\n    var l = this[i] & 0x7fff;\\n    var h = this[i++] >> 15;\\n    var m = xh * l + h * xl;\\n    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\\n    w[j++] = l & 0x3fffffff;\\n  }\\n\\n  return c;\\n} // Alternately, set max digit bits to 28 since some\\n// browsers slow down when dealing with 32-bit numbers.\\n\\n\\nfunction am3(i, x, w, j, c, n) {\\n  var xl = x & 0x3fff,\\n      xh = x >> 14;\\n\\n  while (--n >= 0) {\\n    var l = this[i] & 0x3fff;\\n    var h = this[i++] >> 14;\\n    var m = xh * l + h * xl;\\n    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\\n    c = (l >> 28) + (m >> 14) + xh * h;\\n    w[j++] = l & 0xfffffff;\\n  }\\n\\n  return c;\\n}\\n\\nvar inBrowser = typeof navigator !== 'undefined';\\n\\nif (inBrowser && j_lm && navigator.appName == 'Microsoft Internet Explorer') {\\n  BigInteger.prototype.am = am2;\\n  dbits = 30;\\n} else if (inBrowser && j_lm && navigator.appName != 'Netscape') {\\n  BigInteger.prototype.am = am1;\\n  dbits = 26;\\n} else {\\n  // Mozilla/Netscape seems to prefer am3\\n  BigInteger.prototype.am = am3;\\n  dbits = 28;\\n}\\n\\nBigInteger.prototype.DB = dbits;\\nBigInteger.prototype.DM = (1 << dbits) - 1;\\nBigInteger.prototype.DV = 1 << dbits;\\nvar BI_FP = 52;\\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\\nBigInteger.prototype.F1 = BI_FP - dbits;\\nBigInteger.prototype.F2 = 2 * dbits - BI_FP; // Digit conversions\\n\\nvar BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\\nvar BI_RC = new Array();\\nvar rr, vv;\\nrr = '0'.charCodeAt(0);\\n\\nfor (vv = 0; vv <= 9; ++vv) {\\n  BI_RC[rr++] = vv;\\n}\\n\\nrr = 'a'.charCodeAt(0);\\n\\nfor (vv = 10; vv < 36; ++vv) {\\n  BI_RC[rr++] = vv;\\n}\\n\\nrr = 'A'.charCodeAt(0);\\n\\nfor (vv = 10; vv < 36; ++vv) {\\n  BI_RC[rr++] = vv;\\n}\\n\\nfunction int2char(n) {\\n  return BI_RM.charAt(n);\\n}\\n\\nfunction intAt(s, i) {\\n  var c = BI_RC[s.charCodeAt(i)];\\n  return c == null ? -1 : c;\\n} // (protected) copy this to r\\n\\n\\nfunction bnpCopyTo(r) {\\n  for (var i = this.t - 1; i >= 0; --i) {\\n    r[i] = this[i];\\n  }\\n\\n  r.t = this.t;\\n  r.s = this.s;\\n} // (protected) set from integer value x, -DV <= x < DV\\n\\n\\nfunction bnpFromInt(x) {\\n  this.t = 1;\\n  this.s = x < 0 ? -1 : 0;\\n  if (x > 0) this[0] = x;else if (x < -1) this[0] = x + this.DV;else this.t = 0;\\n} // return bigint initialized to value\\n\\n\\nfunction nbv(i) {\\n  var r = nbi();\\n  r.fromInt(i);\\n  return r;\\n} // (protected) set from string and radix\\n\\n\\nfunction bnpFromString(s, b) {\\n  var k;\\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\\n  this.t = 0;\\n  this.s = 0;\\n  var i = s.length,\\n      mi = false,\\n      sh = 0;\\n\\n  while (--i >= 0) {\\n    var x = intAt(s, i);\\n\\n    if (x < 0) {\\n      if (s.charAt(i) == '-') mi = true;\\n      continue;\\n    }\\n\\n    mi = false;\\n    if (sh == 0) this[this.t++] = x;else if (sh + k > this.DB) {\\n      this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\\n      this[this.t++] = x >> this.DB - sh;\\n    } else this[this.t - 1] |= x << sh;\\n    sh += k;\\n    if (sh >= this.DB) sh -= this.DB;\\n  }\\n\\n  this.clamp();\\n  if (mi) BigInteger.ZERO.subTo(this, this);\\n} // (protected) clamp off excess high words\\n\\n\\nfunction bnpClamp() {\\n  var c = this.s & this.DM;\\n\\n  while (this.t > 0 && this[this.t - 1] == c) {\\n    --this.t;\\n  }\\n} // (public) return string representation in given radix\\n\\n\\nfunction bnToString(b) {\\n  if (this.s < 0) return '-' + this.negate().toString(b);\\n  var k;\\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\\n  var km = (1 << k) - 1,\\n      d,\\n      m = false,\\n      r = '',\\n      i = this.t;\\n  var p = this.DB - i * this.DB % k;\\n\\n  if (i-- > 0) {\\n    if (p < this.DB && (d = this[i] >> p) > 0) {\\n      m = true;\\n      r = int2char(d);\\n    }\\n\\n    while (i >= 0) {\\n      if (p < k) {\\n        d = (this[i] & (1 << p) - 1) << k - p;\\n        d |= this[--i] >> (p += this.DB - k);\\n      } else {\\n        d = this[i] >> (p -= k) & km;\\n\\n        if (p <= 0) {\\n          p += this.DB;\\n          --i;\\n        }\\n      }\\n\\n      if (d > 0) m = true;\\n      if (m) r += int2char(d);\\n    }\\n  }\\n\\n  return m ? r : '0';\\n} // (public) -this\\n\\n\\nfunction bnNegate() {\\n  var r = nbi();\\n  BigInteger.ZERO.subTo(this, r);\\n  return r;\\n} // (public) |this|\\n\\n\\nfunction bnAbs() {\\n  return this.s < 0 ? this.negate() : this;\\n} // (public) return + if this > a, - if this < a, 0 if equal\\n\\n\\nfunction bnCompareTo(a) {\\n  var r = this.s - a.s;\\n  if (r != 0) return r;\\n  var i = this.t;\\n  r = i - a.t;\\n  if (r != 0) return this.s < 0 ? -r : r;\\n\\n  while (--i >= 0) {\\n    if ((r = this[i] - a[i]) != 0) return r;\\n  }\\n\\n  return 0;\\n} // returns bit length of the integer x\\n\\n\\nfunction nbits(x) {\\n  var r = 1,\\n      t;\\n\\n  if ((t = x >>> 16) != 0) {\\n    x = t;\\n    r += 16;\\n  }\\n\\n  if ((t = x >> 8) != 0) {\\n    x = t;\\n    r += 8;\\n  }\\n\\n  if ((t = x >> 4) != 0) {\\n    x = t;\\n    r += 4;\\n  }\\n\\n  if ((t = x >> 2) != 0) {\\n    x = t;\\n    r += 2;\\n  }\\n\\n  if ((t = x >> 1) != 0) {\\n    x = t;\\n    r += 1;\\n  }\\n\\n  return r;\\n} // (public) return the number of bits in \\\"this\\\"\\n\\n\\nfunction bnBitLength() {\\n  if (this.t <= 0) return 0;\\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\\n} // (protected) r = this << n*DB\\n\\n\\nfunction bnpDLShiftTo(n, r) {\\n  var i;\\n\\n  for (i = this.t - 1; i >= 0; --i) {\\n    r[i + n] = this[i];\\n  }\\n\\n  for (i = n - 1; i >= 0; --i) {\\n    r[i] = 0;\\n  }\\n\\n  r.t = this.t + n;\\n  r.s = this.s;\\n} // (protected) r = this >> n*DB\\n\\n\\nfunction bnpDRShiftTo(n, r) {\\n  for (var i = n; i < this.t; ++i) {\\n    r[i - n] = this[i];\\n  }\\n\\n  r.t = Math.max(this.t - n, 0);\\n  r.s = this.s;\\n} // (protected) r = this << n\\n\\n\\nfunction bnpLShiftTo(n, r) {\\n  var bs = n % this.DB;\\n  var cbs = this.DB - bs;\\n  var bm = (1 << cbs) - 1;\\n  var ds = Math.floor(n / this.DB),\\n      c = this.s << bs & this.DM,\\n      i;\\n\\n  for (i = this.t - 1; i >= 0; --i) {\\n    r[i + ds + 1] = this[i] >> cbs | c;\\n    c = (this[i] & bm) << bs;\\n  }\\n\\n  for (i = ds - 1; i >= 0; --i) {\\n    r[i] = 0;\\n  }\\n\\n  r[ds] = c;\\n  r.t = this.t + ds + 1;\\n  r.s = this.s;\\n  r.clamp();\\n} // (protected) r = this >> n\\n\\n\\nfunction bnpRShiftTo(n, r) {\\n  r.s = this.s;\\n  var ds = Math.floor(n / this.DB);\\n\\n  if (ds >= this.t) {\\n    r.t = 0;\\n    return;\\n  }\\n\\n  var bs = n % this.DB;\\n  var cbs = this.DB - bs;\\n  var bm = (1 << bs) - 1;\\n  r[0] = this[ds] >> bs;\\n\\n  for (var i = ds + 1; i < this.t; ++i) {\\n    r[i - ds - 1] |= (this[i] & bm) << cbs;\\n    r[i - ds] = this[i] >> bs;\\n  }\\n\\n  if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\\n  r.t = this.t - ds;\\n  r.clamp();\\n} // (protected) r = this - a\\n\\n\\nfunction bnpSubTo(a, r) {\\n  var i = 0,\\n      c = 0,\\n      m = Math.min(a.t, this.t);\\n\\n  while (i < m) {\\n    c += this[i] - a[i];\\n    r[i++] = c & this.DM;\\n    c >>= this.DB;\\n  }\\n\\n  if (a.t < this.t) {\\n    c -= a.s;\\n\\n    while (i < this.t) {\\n      c += this[i];\\n      r[i++] = c & this.DM;\\n      c >>= this.DB;\\n    }\\n\\n    c += this.s;\\n  } else {\\n    c += this.s;\\n\\n    while (i < a.t) {\\n      c -= a[i];\\n      r[i++] = c & this.DM;\\n      c >>= this.DB;\\n    }\\n\\n    c -= a.s;\\n  }\\n\\n  r.s = c < 0 ? -1 : 0;\\n  if (c < -1) r[i++] = this.DV + c;else if (c > 0) r[i++] = c;\\n  r.t = i;\\n  r.clamp();\\n} // (protected) r = this * a, r != this,a (HAC 14.12)\\n// \\\"this\\\" should be the larger one if appropriate.\\n\\n\\nfunction bnpMultiplyTo(a, r) {\\n  var x = this.abs(),\\n      y = a.abs();\\n  var i = x.t;\\n  r.t = i + y.t;\\n\\n  while (--i >= 0) {\\n    r[i] = 0;\\n  }\\n\\n  for (i = 0; i < y.t; ++i) {\\n    r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\\n  }\\n\\n  r.s = 0;\\n  r.clamp();\\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\\n} // (protected) r = this^2, r != this (HAC 14.16)\\n\\n\\nfunction bnpSquareTo(r) {\\n  var x = this.abs();\\n  var i = r.t = 2 * x.t;\\n\\n  while (--i >= 0) {\\n    r[i] = 0;\\n  }\\n\\n  for (i = 0; i < x.t - 1; ++i) {\\n    var c = x.am(i, x[i], r, 2 * i, 0, 1);\\n\\n    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\\n      r[i + x.t] -= x.DV;\\n      r[i + x.t + 1] = 1;\\n    }\\n  }\\n\\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\\n  r.s = 0;\\n  r.clamp();\\n} // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\\n// r != q, this != m.  q or r may be null.\\n\\n\\nfunction bnpDivRemTo(m, q, r) {\\n  var pm = m.abs();\\n  if (pm.t <= 0) return;\\n  var pt = this.abs();\\n\\n  if (pt.t < pm.t) {\\n    if (q != null) q.fromInt(0);\\n    if (r != null) this.copyTo(r);\\n    return;\\n  }\\n\\n  if (r == null) r = nbi();\\n  var y = nbi(),\\n      ts = this.s,\\n      ms = m.s;\\n  var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\\n\\n  if (nsh > 0) {\\n    pm.lShiftTo(nsh, y);\\n    pt.lShiftTo(nsh, r);\\n  } else {\\n    pm.copyTo(y);\\n    pt.copyTo(r);\\n  }\\n\\n  var ys = y.t;\\n  var y0 = y[ys - 1];\\n  if (y0 == 0) return;\\n  var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\\n  var d1 = this.FV / yt,\\n      d2 = (1 << this.F1) / yt,\\n      e = 1 << this.F2;\\n  var i = r.t,\\n      j = i - ys,\\n      t = q == null ? nbi() : q;\\n  y.dlShiftTo(j, t);\\n\\n  if (r.compareTo(t) >= 0) {\\n    r[r.t++] = 1;\\n    r.subTo(t, r);\\n  }\\n\\n  BigInteger.ONE.dlShiftTo(ys, t);\\n  t.subTo(y, y); // \\\"negative\\\" y so we can replace sub with am later\\n\\n  while (y.t < ys) {\\n    y[y.t++] = 0;\\n  }\\n\\n  while (--j >= 0) {\\n    // Estimate quotient digit\\n    var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\\n\\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\\n      // Try it out\\n      y.dlShiftTo(j, t);\\n      r.subTo(t, r);\\n\\n      while (r[i] < --qd) {\\n        r.subTo(t, r);\\n      }\\n    }\\n  }\\n\\n  if (q != null) {\\n    r.drShiftTo(ys, q);\\n    if (ts != ms) BigInteger.ZERO.subTo(q, q);\\n  }\\n\\n  r.t = ys;\\n  r.clamp();\\n  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\\n\\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\\n} // (public) this mod a\\n\\n\\nfunction bnMod(a) {\\n  var r = nbi();\\n  this.abs().divRemTo(a, null, r);\\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\\n  return r;\\n} // (protected) return \\\"-1/this % 2^DB\\\"; useful for Mont. reduction\\n// justification:\\n//         xy == 1 (mod m)\\n//         xy =  1+km\\n//   xy(2-xy) = (1+km)(1-km)\\n// x[y(2-xy)] = 1-k^2m^2\\n// x[y(2-xy)] == 1 (mod m^2)\\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\\n// JS multiply \\\"overflows\\\" differently from C/C++, so care is needed here.\\n\\n\\nfunction bnpInvDigit() {\\n  if (this.t < 1) return 0;\\n  var x = this[0];\\n  if ((x & 1) == 0) return 0;\\n  var y = x & 3; // y == 1/x mod 2^2\\n\\n  y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4\\n\\n  y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8\\n\\n  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16\\n  // last step - calculate inverse mod DV directly;\\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\\n\\n  y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits\\n  // we really want the negative inverse, and -DV < y < DV\\n\\n  return y > 0 ? this.DV - y : -y;\\n}\\n\\nfunction bnEquals(a) {\\n  return this.compareTo(a) == 0;\\n} // (protected) r = this + a\\n\\n\\nfunction bnpAddTo(a, r) {\\n  var i = 0,\\n      c = 0,\\n      m = Math.min(a.t, this.t);\\n\\n  while (i < m) {\\n    c += this[i] + a[i];\\n    r[i++] = c & this.DM;\\n    c >>= this.DB;\\n  }\\n\\n  if (a.t < this.t) {\\n    c += a.s;\\n\\n    while (i < this.t) {\\n      c += this[i];\\n      r[i++] = c & this.DM;\\n      c >>= this.DB;\\n    }\\n\\n    c += this.s;\\n  } else {\\n    c += this.s;\\n\\n    while (i < a.t) {\\n      c += a[i];\\n      r[i++] = c & this.DM;\\n      c >>= this.DB;\\n    }\\n\\n    c += a.s;\\n  }\\n\\n  r.s = c < 0 ? -1 : 0;\\n  if (c > 0) r[i++] = c;else if (c < -1) r[i++] = this.DV + c;\\n  r.t = i;\\n  r.clamp();\\n} // (public) this + a\\n\\n\\nfunction bnAdd(a) {\\n  var r = nbi();\\n  this.addTo(a, r);\\n  return r;\\n} // (public) this - a\\n\\n\\nfunction bnSubtract(a) {\\n  var r = nbi();\\n  this.subTo(a, r);\\n  return r;\\n} // (public) this * a\\n\\n\\nfunction bnMultiply(a) {\\n  var r = nbi();\\n  this.multiplyTo(a, r);\\n  return r;\\n} // (public) this / a\\n\\n\\nfunction bnDivide(a) {\\n  var r = nbi();\\n  this.divRemTo(a, r, null);\\n  return r;\\n} // Montgomery reduction\\n\\n\\nfunction Montgomery(m) {\\n  this.m = m;\\n  this.mp = m.invDigit();\\n  this.mpl = this.mp & 0x7fff;\\n  this.mph = this.mp >> 15;\\n  this.um = (1 << m.DB - 15) - 1;\\n  this.mt2 = 2 * m.t;\\n} // xR mod m\\n\\n\\nfunction montConvert(x) {\\n  var r = nbi();\\n  x.abs().dlShiftTo(this.m.t, r);\\n  r.divRemTo(this.m, null, r);\\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\\n  return r;\\n} // x/R mod m\\n\\n\\nfunction montRevert(x) {\\n  var r = nbi();\\n  x.copyTo(r);\\n  this.reduce(r);\\n  return r;\\n} // x = x/R mod m (HAC 14.32)\\n\\n\\nfunction montReduce(x) {\\n  while (x.t <= this.mt2) {\\n    // pad x so am has enough room later\\n    x[x.t++] = 0;\\n  }\\n\\n  for (var i = 0; i < this.m.t; ++i) {\\n    // faster way of calculating u0 = x[i]*mp mod DV\\n    var j = x[i] & 0x7fff;\\n    var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM; // use am to combine the multiply-shift-add into one call\\n\\n    j = i + this.m.t;\\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t); // propagate carry\\n\\n    while (x[j] >= x.DV) {\\n      x[j] -= x.DV;\\n      x[++j]++;\\n    }\\n  }\\n\\n  x.clamp();\\n  x.drShiftTo(this.m.t, x);\\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\\n} // r = \\\"x^2/R mod m\\\"; x != r\\n\\n\\nfunction montSqrTo(x, r) {\\n  x.squareTo(r);\\n  this.reduce(r);\\n} // r = \\\"xy/R mod m\\\"; x,y != r\\n\\n\\nfunction montMulTo(x, y, r) {\\n  x.multiplyTo(y, r);\\n  this.reduce(r);\\n}\\n\\nMontgomery.prototype.convert = montConvert;\\nMontgomery.prototype.revert = montRevert;\\nMontgomery.prototype.reduce = montReduce;\\nMontgomery.prototype.mulTo = montMulTo;\\nMontgomery.prototype.sqrTo = montSqrTo; // (public) this^e % m (HAC 14.85)\\n\\nfunction bnModPow(e, m, callback) {\\n  var i = e.bitLength(),\\n      k,\\n      r = nbv(1),\\n      z = new Montgomery(m);\\n  if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6; // precomputation\\n\\n  var g = new Array(),\\n      n = 3,\\n      k1 = k - 1,\\n      km = (1 << k) - 1;\\n  g[1] = z.convert(this);\\n\\n  if (k > 1) {\\n    var g2 = nbi();\\n    z.sqrTo(g[1], g2);\\n\\n    while (n <= km) {\\n      g[n] = nbi();\\n      z.mulTo(g2, g[n - 2], g[n]);\\n      n += 2;\\n    }\\n  }\\n\\n  var j = e.t - 1,\\n      w,\\n      is1 = true,\\n      r2 = nbi(),\\n      t;\\n  i = nbits(e[j]) - 1;\\n\\n  while (j >= 0) {\\n    if (i >= k1) w = e[j] >> i - k1 & km;else {\\n      w = (e[j] & (1 << i + 1) - 1) << k1 - i;\\n      if (j > 0) w |= e[j - 1] >> this.DB + i - k1;\\n    }\\n    n = k;\\n\\n    while ((w & 1) == 0) {\\n      w >>= 1;\\n      --n;\\n    }\\n\\n    if ((i -= n) < 0) {\\n      i += this.DB;\\n      --j;\\n    }\\n\\n    if (is1) {\\n      // ret == 1, don't bother squaring or multiplying it\\n      g[w].copyTo(r);\\n      is1 = false;\\n    } else {\\n      while (n > 1) {\\n        z.sqrTo(r, r2);\\n        z.sqrTo(r2, r);\\n        n -= 2;\\n      }\\n\\n      if (n > 0) z.sqrTo(r, r2);else {\\n        t = r;\\n        r = r2;\\n        r2 = t;\\n      }\\n      z.mulTo(r2, g[w], r);\\n    }\\n\\n    while (j >= 0 && (e[j] & 1 << i) == 0) {\\n      z.sqrTo(r, r2);\\n      t = r;\\n      r = r2;\\n      r2 = t;\\n\\n      if (--i < 0) {\\n        i = this.DB - 1;\\n        --j;\\n      }\\n    }\\n  }\\n\\n  var result = z.revert(r);\\n  callback(null, result);\\n  return result;\\n} // protected\\n\\n\\nBigInteger.prototype.copyTo = bnpCopyTo;\\nBigInteger.prototype.fromInt = bnpFromInt;\\nBigInteger.prototype.fromString = bnpFromString;\\nBigInteger.prototype.clamp = bnpClamp;\\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\\nBigInteger.prototype.subTo = bnpSubTo;\\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\\nBigInteger.prototype.squareTo = bnpSquareTo;\\nBigInteger.prototype.divRemTo = bnpDivRemTo;\\nBigInteger.prototype.invDigit = bnpInvDigit;\\nBigInteger.prototype.addTo = bnpAddTo; // public\\n\\nBigInteger.prototype.toString = bnToString;\\nBigInteger.prototype.negate = bnNegate;\\nBigInteger.prototype.abs = bnAbs;\\nBigInteger.prototype.compareTo = bnCompareTo;\\nBigInteger.prototype.bitLength = bnBitLength;\\nBigInteger.prototype.mod = bnMod;\\nBigInteger.prototype.equals = bnEquals;\\nBigInteger.prototype.add = bnAdd;\\nBigInteger.prototype.subtract = bnSubtract;\\nBigInteger.prototype.multiply = bnMultiply;\\nBigInteger.prototype.divide = bnDivide;\\nBigInteger.prototype.modPow = bnModPow; // \\\"constants\\\"\\n\\nBigInteger.ZERO = nbv(0);\\nBigInteger.ONE = nbv(1);\",\"/*!\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\nimport { Buffer } from 'buffer';\\nimport CryptoJS from 'crypto-js/core';\\nimport 'crypto-js/lib-typedarrays'; // necessary for crypto js\\n\\nimport SHA256 from 'crypto-js/sha256';\\nimport HmacSHA256 from 'crypto-js/hmac-sha256';\\n\\nvar randomBytes = function randomBytes(nBytes) {\\n  return Buffer.from(CryptoJS.lib.WordArray.random(nBytes).toString(), 'hex');\\n};\\n\\nimport BigInteger from './BigInteger';\\nvar initN = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' + '83655D23DCA3AD961C62F356208552BB9ED529077096966D' + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\\nvar newPasswordRequiredChallengeUserAttributePrefix = 'userAttributes.';\\n/** @class */\\n\\nvar AuthenticationHelper = /*#__PURE__*/function () {\\n  /**\\n   * Constructs a new AuthenticationHelper object\\n   * @param {string} PoolName Cognito user pool name.\\n   */\\n  function AuthenticationHelper(PoolName) {\\n    this.N = new BigInteger(initN, 16);\\n    this.g = new BigInteger('2', 16);\\n    this.k = new BigInteger(this.hexHash(\\\"00\\\" + this.N.toString(16) + \\\"0\\\" + this.g.toString(16)), 16);\\n    this.smallAValue = this.generateRandomSmallA();\\n    this.getLargeAValue(function () {});\\n    this.infoBits = Buffer.from('Caldera Derived Key', 'utf8');\\n    this.poolName = PoolName;\\n  }\\n  /**\\n   * @returns {BigInteger} small A, a random number\\n   */\\n\\n\\n  var _proto = AuthenticationHelper.prototype;\\n\\n  _proto.getSmallAValue = function getSmallAValue() {\\n    return this.smallAValue;\\n  }\\n  /**\\n   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.getLargeAValue = function getLargeAValue(callback) {\\n    var _this = this;\\n\\n    if (this.largeAValue) {\\n      callback(null, this.largeAValue);\\n    } else {\\n      this.calculateA(this.smallAValue, function (err, largeAValue) {\\n        if (err) {\\n          callback(err, null);\\n        }\\n\\n        _this.largeAValue = largeAValue;\\n        callback(null, _this.largeAValue);\\n      });\\n    }\\n  }\\n  /**\\n   * helper function to generate a random big integer\\n   * @returns {BigInteger} a random value.\\n   * @private\\n   */\\n  ;\\n\\n  _proto.generateRandomSmallA = function generateRandomSmallA() {\\n    var hexRandom = randomBytes(128).toString('hex');\\n    var randomBigInt = new BigInteger(hexRandom, 16);\\n    var smallABigInt = randomBigInt.mod(this.N);\\n    return smallABigInt;\\n  }\\n  /**\\n   * helper function to generate a random string\\n   * @returns {string} a random value.\\n   * @private\\n   */\\n  ;\\n\\n  _proto.generateRandomString = function generateRandomString() {\\n    return randomBytes(40).toString('base64');\\n  }\\n  /**\\n   * @returns {string} Generated random value included in password hash.\\n   */\\n  ;\\n\\n  _proto.getRandomPassword = function getRandomPassword() {\\n    return this.randomPassword;\\n  }\\n  /**\\n   * @returns {string} Generated random value included in devices hash.\\n   */\\n  ;\\n\\n  _proto.getSaltDevices = function getSaltDevices() {\\n    return this.SaltToHashDevices;\\n  }\\n  /**\\n   * @returns {string} Value used to verify devices.\\n   */\\n  ;\\n\\n  _proto.getVerifierDevices = function getVerifierDevices() {\\n    return this.verifierDevices;\\n  }\\n  /**\\n   * Generate salts and compute verifier.\\n   * @param {string} deviceGroupKey Devices to generate verifier for.\\n   * @param {string} username User to generate verifier for.\\n   * @param {nodeCallback<null>} callback Called with (err, null)\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.generateHashDevice = function generateHashDevice(deviceGroupKey, username, callback) {\\n    var _this2 = this;\\n\\n    this.randomPassword = this.generateRandomString();\\n    var combinedString = \\\"\\\" + deviceGroupKey + username + \\\":\\\" + this.randomPassword;\\n    var hashedString = this.hash(combinedString);\\n    var hexRandom = randomBytes(16).toString('hex');\\n    this.SaltToHashDevices = this.padHex(new BigInteger(hexRandom, 16));\\n    this.g.modPow(new BigInteger(this.hexHash(this.SaltToHashDevices + hashedString), 16), this.N, function (err, verifierDevicesNotPadded) {\\n      if (err) {\\n        callback(err, null);\\n      }\\n\\n      _this2.verifierDevices = _this2.padHex(verifierDevicesNotPadded);\\n      callback(null, null);\\n    });\\n  }\\n  /**\\n   * Calculate the client's public value A = g^a%N\\n   * with the generated random number a\\n   * @param {BigInteger} a Randomly generated small A.\\n   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\\n   * @returns {void}\\n   * @private\\n   */\\n  ;\\n\\n  _proto.calculateA = function calculateA(a, callback) {\\n    var _this3 = this;\\n\\n    this.g.modPow(a, this.N, function (err, A) {\\n      if (err) {\\n        callback(err, null);\\n      }\\n\\n      if (A.mod(_this3.N).equals(BigInteger.ZERO)) {\\n        callback(new Error('Illegal paramater. A mod N cannot be 0.'), null);\\n      }\\n\\n      callback(null, A);\\n    });\\n  }\\n  /**\\n   * Calculate the client's value U which is the hash of A and B\\n   * @param {BigInteger} A Large A value.\\n   * @param {BigInteger} B Server B value.\\n   * @returns {BigInteger} Computed U value.\\n   * @private\\n   */\\n  ;\\n\\n  _proto.calculateU = function calculateU(A, B) {\\n    this.UHexHash = this.hexHash(this.padHex(A) + this.padHex(B));\\n    var finalU = new BigInteger(this.UHexHash, 16);\\n    return finalU;\\n  }\\n  /**\\n   * Calculate a hash from a bitArray\\n   * @param {Buffer} buf Value to hash.\\n   * @returns {String} Hex-encoded hash.\\n   * @private\\n   */\\n  ;\\n\\n  _proto.hash = function hash(buf) {\\n    var str = buf instanceof Buffer ? CryptoJS.lib.WordArray.create(buf) : buf;\\n    var hashHex = SHA256(str).toString();\\n    return new Array(64 - hashHex.length).join('0') + hashHex;\\n  }\\n  /**\\n   * Calculate a hash from a hex string\\n   * @param {String} hexStr Value to hash.\\n   * @returns {String} Hex-encoded hash.\\n   * @private\\n   */\\n  ;\\n\\n  _proto.hexHash = function hexHash(hexStr) {\\n    return this.hash(Buffer.from(hexStr, 'hex'));\\n  }\\n  /**\\n   * Standard hkdf algorithm\\n   * @param {Buffer} ikm Input key material.\\n   * @param {Buffer} salt Salt value.\\n   * @returns {Buffer} Strong key material.\\n   * @private\\n   */\\n  ;\\n\\n  _proto.computehkdf = function computehkdf(ikm, salt) {\\n    var infoBitsWordArray = CryptoJS.lib.WordArray.create(Buffer.concat([this.infoBits, Buffer.from(String.fromCharCode(1), 'utf8')]));\\n    var ikmWordArray = ikm instanceof Buffer ? CryptoJS.lib.WordArray.create(ikm) : ikm;\\n    var saltWordArray = salt instanceof Buffer ? CryptoJS.lib.WordArray.create(salt) : salt;\\n    var prk = HmacSHA256(ikmWordArray, saltWordArray);\\n    var hmac = HmacSHA256(infoBitsWordArray, prk);\\n    return Buffer.from(hmac.toString(), 'hex').slice(0, 16);\\n  }\\n  /**\\n   * Calculates the final hkdf based on computed S value, and computed U value and the key\\n   * @param {String} username Username.\\n   * @param {String} password Password.\\n   * @param {BigInteger} serverBValue Server B value.\\n   * @param {BigInteger} salt Generated salt.\\n   * @param {nodeCallback<Buffer>} callback Called with (err, hkdfValue)\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.getPasswordAuthenticationKey = function getPasswordAuthenticationKey(username, password, serverBValue, salt, callback) {\\n    var _this4 = this;\\n\\n    if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\\n      throw new Error('B cannot be zero.');\\n    }\\n\\n    this.UValue = this.calculateU(this.largeAValue, serverBValue);\\n\\n    if (this.UValue.equals(BigInteger.ZERO)) {\\n      throw new Error('U cannot be zero.');\\n    }\\n\\n    var usernamePassword = \\\"\\\" + this.poolName + username + \\\":\\\" + password;\\n    var usernamePasswordHash = this.hash(usernamePassword);\\n    var xValue = new BigInteger(this.hexHash(this.padHex(salt) + usernamePasswordHash), 16);\\n    this.calculateS(xValue, serverBValue, function (err, sValue) {\\n      if (err) {\\n        callback(err, null);\\n      }\\n\\n      var hkdf = _this4.computehkdf(Buffer.from(_this4.padHex(sValue), 'hex'), Buffer.from(_this4.padHex(_this4.UValue.toString(16)), 'hex'));\\n\\n      callback(null, hkdf);\\n    });\\n  }\\n  /**\\n   * Calculates the S value used in getPasswordAuthenticationKey\\n   * @param {BigInteger} xValue Salted password hash value.\\n   * @param {BigInteger} serverBValue Server B value.\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.calculateS = function calculateS(xValue, serverBValue, callback) {\\n    var _this5 = this;\\n\\n    this.g.modPow(xValue, this.N, function (err, gModPowXN) {\\n      if (err) {\\n        callback(err, null);\\n      }\\n\\n      var intValue2 = serverBValue.subtract(_this5.k.multiply(gModPowXN));\\n      intValue2.modPow(_this5.smallAValue.add(_this5.UValue.multiply(xValue)), _this5.N, function (err2, result) {\\n        if (err2) {\\n          callback(err2, null);\\n        }\\n\\n        callback(null, result.mod(_this5.N));\\n      });\\n    });\\n  }\\n  /**\\n   * Return constant newPasswordRequiredChallengeUserAttributePrefix\\n   * @return {newPasswordRequiredChallengeUserAttributePrefix} constant prefix value\\n   */\\n  ;\\n\\n  _proto.getNewPasswordRequiredChallengeUserAttributePrefix = function getNewPasswordRequiredChallengeUserAttributePrefix() {\\n    return newPasswordRequiredChallengeUserAttributePrefix;\\n  }\\n  /**\\n   * Converts a BigInteger (or hex string) to hex format padded with zeroes for hashing\\n   * @param {BigInteger|String} bigInt Number or string to pad.\\n   * @returns {String} Padded hex string.\\n   */\\n  ;\\n\\n  _proto.padHex = function padHex(bigInt) {\\n    var hashStr = bigInt.toString(16);\\n\\n    if (hashStr.length % 2 === 1) {\\n      hashStr = \\\"0\\\" + hashStr;\\n    } else if ('89ABCDEFabcdef'.indexOf(hashStr[0]) !== -1) {\\n      hashStr = \\\"00\\\" + hashStr;\\n    }\\n\\n    return hashStr;\\n  };\\n\\n  return AuthenticationHelper;\\n}();\\n\\nexport { AuthenticationHelper as default };\",\"/*!\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\nimport { Buffer } from 'buffer';\\n/** @class */\\n\\nvar CognitoJwtToken = /*#__PURE__*/function () {\\n  /**\\n   * Constructs a new CognitoJwtToken object\\n   * @param {string=} token The JWT token.\\n   */\\n  function CognitoJwtToken(token) {\\n    // Assign object\\n    this.jwtToken = token || '';\\n    this.payload = this.decodePayload();\\n  }\\n  /**\\n   * @returns {string} the record's token.\\n   */\\n\\n\\n  var _proto = CognitoJwtToken.prototype;\\n\\n  _proto.getJwtToken = function getJwtToken() {\\n    return this.jwtToken;\\n  }\\n  /**\\n   * @returns {int} the token's expiration (exp member).\\n   */\\n  ;\\n\\n  _proto.getExpiration = function getExpiration() {\\n    return this.payload.exp;\\n  }\\n  /**\\n   * @returns {int} the token's \\\"issued at\\\" (iat member).\\n   */\\n  ;\\n\\n  _proto.getIssuedAt = function getIssuedAt() {\\n    return this.payload.iat;\\n  }\\n  /**\\n   * @returns {object} the token's payload.\\n   */\\n  ;\\n\\n  _proto.decodePayload = function decodePayload() {\\n    var payload = this.jwtToken.split('.')[1];\\n\\n    try {\\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\\n    } catch (err) {\\n      return {};\\n    }\\n  };\\n\\n  return CognitoJwtToken;\\n}();\\n\\nexport { CognitoJwtToken as default };\",\"function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\\n\\n/*\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\nimport CognitoJwtToken from './CognitoJwtToken';\\n/** @class */\\n\\nvar CognitoAccessToken = /*#__PURE__*/function (_CognitoJwtToken) {\\n  _inheritsLoose(CognitoAccessToken, _CognitoJwtToken);\\n\\n  /**\\n   * Constructs a new CognitoAccessToken object\\n   * @param {string=} AccessToken The JWT access token.\\n   */\\n  function CognitoAccessToken(_temp) {\\n    var _ref = _temp === void 0 ? {} : _temp,\\n        AccessToken = _ref.AccessToken;\\n\\n    return _CognitoJwtToken.call(this, AccessToken || '') || this;\\n  }\\n\\n  return CognitoAccessToken;\\n}(CognitoJwtToken);\\n\\nexport { CognitoAccessToken as default };\",\"function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\\n\\n/*!\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\nimport CognitoJwtToken from './CognitoJwtToken';\\n/** @class */\\n\\nvar CognitoIdToken = /*#__PURE__*/function (_CognitoJwtToken) {\\n  _inheritsLoose(CognitoIdToken, _CognitoJwtToken);\\n\\n  /**\\n   * Constructs a new CognitoIdToken object\\n   * @param {string=} IdToken The JWT Id token\\n   */\\n  function CognitoIdToken(_temp) {\\n    var _ref = _temp === void 0 ? {} : _temp,\\n        IdToken = _ref.IdToken;\\n\\n    return _CognitoJwtToken.call(this, IdToken || '') || this;\\n  }\\n\\n  return CognitoIdToken;\\n}(CognitoJwtToken);\\n\\nexport { CognitoIdToken as default };\",\"/*!\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/** @class */\\nvar CognitoRefreshToken = /*#__PURE__*/function () {\\n  /**\\n   * Constructs a new CognitoRefreshToken object\\n   * @param {string=} RefreshToken The JWT refresh token.\\n   */\\n  function CognitoRefreshToken(_temp) {\\n    var _ref = _temp === void 0 ? {} : _temp,\\n        RefreshToken = _ref.RefreshToken;\\n\\n    // Assign object\\n    this.token = RefreshToken || '';\\n  }\\n  /**\\n   * @returns {string} the record's token.\\n   */\\n\\n\\n  var _proto = CognitoRefreshToken.prototype;\\n\\n  _proto.getToken = function getToken() {\\n    return this.token;\\n  };\\n\\n  return CognitoRefreshToken;\\n}();\\n\\nexport { CognitoRefreshToken as default };\",\"/*!\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/** @class */\\nvar CognitoUserSession = /*#__PURE__*/function () {\\n  /**\\n   * Constructs a new CognitoUserSession object\\n   * @param {CognitoIdToken} IdToken The session's Id token.\\n   * @param {CognitoRefreshToken=} RefreshToken The session's refresh token.\\n   * @param {CognitoAccessToken} AccessToken The session's access token.\\n   * @param {int} ClockDrift The saved computer's clock drift or undefined to force calculation.\\n   */\\n  function CognitoUserSession(_temp) {\\n    var _ref = _temp === void 0 ? {} : _temp,\\n        IdToken = _ref.IdToken,\\n        RefreshToken = _ref.RefreshToken,\\n        AccessToken = _ref.AccessToken,\\n        ClockDrift = _ref.ClockDrift;\\n\\n    if (AccessToken == null || IdToken == null) {\\n      throw new Error('Id token and Access Token must be present.');\\n    }\\n\\n    this.idToken = IdToken;\\n    this.refreshToken = RefreshToken;\\n    this.accessToken = AccessToken;\\n    this.clockDrift = ClockDrift === undefined ? this.calculateClockDrift() : ClockDrift;\\n  }\\n  /**\\n   * @returns {CognitoIdToken} the session's Id token\\n   */\\n\\n\\n  var _proto = CognitoUserSession.prototype;\\n\\n  _proto.getIdToken = function getIdToken() {\\n    return this.idToken;\\n  }\\n  /**\\n   * @returns {CognitoRefreshToken} the session's refresh token\\n   */\\n  ;\\n\\n  _proto.getRefreshToken = function getRefreshToken() {\\n    return this.refreshToken;\\n  }\\n  /**\\n   * @returns {CognitoAccessToken} the session's access token\\n   */\\n  ;\\n\\n  _proto.getAccessToken = function getAccessToken() {\\n    return this.accessToken;\\n  }\\n  /**\\n   * @returns {int} the session's clock drift\\n   */\\n  ;\\n\\n  _proto.getClockDrift = function getClockDrift() {\\n    return this.clockDrift;\\n  }\\n  /**\\n   * @returns {int} the computer's clock drift\\n   */\\n  ;\\n\\n  _proto.calculateClockDrift = function calculateClockDrift() {\\n    var now = Math.floor(new Date() / 1000);\\n    var iat = Math.min(this.accessToken.getIssuedAt(), this.idToken.getIssuedAt());\\n    return now - iat;\\n  }\\n  /**\\n   * Checks to see if the session is still valid based on session expiry information found\\n   * in tokens and the current time (adjusted with clock drift)\\n   * @returns {boolean} if the session is still valid\\n   */\\n  ;\\n\\n  _proto.isValid = function isValid() {\\n    var now = Math.floor(new Date() / 1000);\\n    var adjusted = now - this.clockDrift;\\n    return adjusted < this.accessToken.getExpiration() && adjusted < this.idToken.getExpiration();\\n  };\\n\\n  return CognitoUserSession;\\n}();\\n\\nexport { CognitoUserSession as default };\",\"/*!\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\nvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\\nvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\\n/** @class */\\n\\nvar DateHelper = /*#__PURE__*/function () {\\n  function DateHelper() {}\\n\\n  var _proto = DateHelper.prototype;\\n\\n  /**\\n   * @returns {string} The current time in \\\"ddd MMM D HH:mm:ss UTC YYYY\\\" format.\\n   */\\n  _proto.getNowString = function getNowString() {\\n    var now = new Date();\\n    var weekDay = weekNames[now.getUTCDay()];\\n    var month = monthNames[now.getUTCMonth()];\\n    var day = now.getUTCDate();\\n    var hours = now.getUTCHours();\\n\\n    if (hours < 10) {\\n      hours = \\\"0\\\" + hours;\\n    }\\n\\n    var minutes = now.getUTCMinutes();\\n\\n    if (minutes < 10) {\\n      minutes = \\\"0\\\" + minutes;\\n    }\\n\\n    var seconds = now.getUTCSeconds();\\n\\n    if (seconds < 10) {\\n      seconds = \\\"0\\\" + seconds;\\n    }\\n\\n    var year = now.getUTCFullYear(); // ddd MMM D HH:mm:ss UTC YYYY\\n\\n    var dateNow = weekDay + \\\" \\\" + month + \\\" \\\" + day + \\\" \\\" + hours + \\\":\\\" + minutes + \\\":\\\" + seconds + \\\" UTC \\\" + year;\\n    return dateNow;\\n  };\\n\\n  return DateHelper;\\n}();\\n\\nexport { DateHelper as default };\",\"/*!\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/** @class */\\nvar CognitoUserAttribute = /*#__PURE__*/function () {\\n  /**\\n   * Constructs a new CognitoUserAttribute object\\n   * @param {string=} Name The record's name\\n   * @param {string=} Value The record's value\\n   */\\n  function CognitoUserAttribute(_temp) {\\n    var _ref = _temp === void 0 ? {} : _temp,\\n        Name = _ref.Name,\\n        Value = _ref.Value;\\n\\n    this.Name = Name || '';\\n    this.Value = Value || '';\\n  }\\n  /**\\n   * @returns {string} the record's value.\\n   */\\n\\n\\n  var _proto = CognitoUserAttribute.prototype;\\n\\n  _proto.getValue = function getValue() {\\n    return this.Value;\\n  }\\n  /**\\n   * Sets the record's value.\\n   * @param {string} value The new value.\\n   * @returns {CognitoUserAttribute} The record for method chaining.\\n   */\\n  ;\\n\\n  _proto.setValue = function setValue(value) {\\n    this.Value = value;\\n    return this;\\n  }\\n  /**\\n   * @returns {string} the record's name.\\n   */\\n  ;\\n\\n  _proto.getName = function getName() {\\n    return this.Name;\\n  }\\n  /**\\n   * Sets the record's name\\n   * @param {string} name The new name.\\n   * @returns {CognitoUserAttribute} The record for method chaining.\\n   */\\n  ;\\n\\n  _proto.setName = function setName(name) {\\n    this.Name = name;\\n    return this;\\n  }\\n  /**\\n   * @returns {string} a string representation of the record.\\n   */\\n  ;\\n\\n  _proto.toString = function toString() {\\n    return JSON.stringify(this);\\n  }\\n  /**\\n   * @returns {object} a flat object representing the record.\\n   */\\n  ;\\n\\n  _proto.toJSON = function toJSON() {\\n    return {\\n      Name: this.Name,\\n      Value: this.Value\\n    };\\n  };\\n\\n  return CognitoUserAttribute;\\n}();\\n\\nexport { CognitoUserAttribute as default };\",\"/*!\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\nvar dataMemory = {};\\n/** @class */\\n\\nvar MemoryStorage = /*#__PURE__*/function () {\\n  function MemoryStorage() {}\\n\\n  /**\\n   * This is used to set a specific item in storage\\n   * @param {string} key - the key for the item\\n   * @param {object} value - the value\\n   * @returns {string} value that was set\\n   */\\n  MemoryStorage.setItem = function setItem(key, value) {\\n    dataMemory[key] = value;\\n    return dataMemory[key];\\n  }\\n  /**\\n   * This is used to get a specific key from storage\\n   * @param {string} key - the key for the item\\n   * This is used to clear the storage\\n   * @returns {string} the data item\\n   */\\n  ;\\n\\n  MemoryStorage.getItem = function getItem(key) {\\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\\n  }\\n  /**\\n   * This is used to remove an item from storage\\n   * @param {string} key - the key being set\\n   * @returns {string} value - value that was deleted\\n   */\\n  ;\\n\\n  MemoryStorage.removeItem = function removeItem(key) {\\n    return delete dataMemory[key];\\n  }\\n  /**\\n   * This is used to clear the storage\\n   * @returns {string} nothing\\n   */\\n  ;\\n\\n  MemoryStorage.clear = function clear() {\\n    dataMemory = {};\\n    return dataMemory;\\n  };\\n\\n  return MemoryStorage;\\n}();\\n/** @class */\\n\\n\\nvar StorageHelper = /*#__PURE__*/function () {\\n  /**\\n   * This is used to get a storage object\\n   * @returns {object} the storage\\n   */\\n  function StorageHelper() {\\n    try {\\n      this.storageWindow = window.localStorage;\\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\\n      this.storageWindow.removeItem('aws.cognito.test-ls');\\n    } catch (exception) {\\n      this.storageWindow = MemoryStorage;\\n    }\\n  }\\n  /**\\n   * This is used to return the storage\\n   * @returns {object} the storage\\n   */\\n\\n\\n  var _proto = StorageHelper.prototype;\\n\\n  _proto.getStorage = function getStorage() {\\n    return this.storageWindow;\\n  };\\n\\n  return StorageHelper;\\n}();\\n\\nexport { StorageHelper as default };\",\"/*!\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\nimport { Buffer } from 'buffer';\\nimport CryptoJS from 'crypto-js/core';\\nimport TypedArrays from 'crypto-js/lib-typedarrays'; // necessary for crypto js\\n\\nimport Base64 from 'crypto-js/enc-base64';\\nimport HmacSHA256 from 'crypto-js/hmac-sha256';\\nimport BigInteger from './BigInteger';\\nimport AuthenticationHelper from './AuthenticationHelper';\\nimport CognitoAccessToken from './CognitoAccessToken';\\nimport CognitoIdToken from './CognitoIdToken';\\nimport CognitoRefreshToken from './CognitoRefreshToken';\\nimport CognitoUserSession from './CognitoUserSession';\\nimport DateHelper from './DateHelper';\\nimport CognitoUserAttribute from './CognitoUserAttribute';\\nimport StorageHelper from './StorageHelper';\\n/**\\n * @callback nodeCallback\\n * @template T result\\n * @param {*} err The operation failure reason, or null.\\n * @param {T} result The operation result.\\n */\\n\\n/**\\n * @callback onFailure\\n * @param {*} err Failure reason.\\n */\\n\\n/**\\n * @callback onSuccess\\n * @template T result\\n * @param {T} result The operation result.\\n */\\n\\n/**\\n * @callback mfaRequired\\n * @param {*} details MFA challenge details.\\n */\\n\\n/**\\n * @callback customChallenge\\n * @param {*} details Custom challenge details.\\n */\\n\\n/**\\n * @callback inputVerificationCode\\n * @param {*} data Server response.\\n */\\n\\n/**\\n * @callback authSuccess\\n * @param {CognitoUserSession} session The new session.\\n * @param {bool=} userConfirmationNecessary User must be confirmed.\\n */\\n\\nvar isBrowser = typeof navigator !== 'undefined';\\nvar userAgent = isBrowser ? navigator.userAgent : 'nodejs';\\n/** @class */\\n\\nvar CognitoUser = /*#__PURE__*/function () {\\n  /**\\n   * Constructs a new CognitoUser object\\n   * @param {object} data Creation options\\n   * @param {string} data.Username The user's username.\\n   * @param {CognitoUserPool} data.Pool Pool containing the user.\\n   * @param {object} data.Storage Optional storage object.\\n   */\\n  function CognitoUser(data) {\\n    if (data == null || data.Username == null || data.Pool == null) {\\n      throw new Error('Username and pool information are required.');\\n    }\\n\\n    this.username = data.Username || '';\\n    this.pool = data.Pool;\\n    this.Session = null;\\n    this.client = data.Pool.client;\\n    this.signInUserSession = null;\\n    this.authenticationFlowType = 'USER_SRP_AUTH';\\n    this.storage = data.Storage || new StorageHelper().getStorage();\\n    this.keyPrefix = \\\"CognitoIdentityServiceProvider.\\\" + this.pool.getClientId();\\n    this.userDataKey = this.keyPrefix + \\\".\\\" + this.username + \\\".userData\\\";\\n  }\\n  /**\\n   * Sets the session for this user\\n   * @param {CognitoUserSession} signInUserSession the session\\n   * @returns {void}\\n   */\\n\\n\\n  var _proto = CognitoUser.prototype;\\n\\n  _proto.setSignInUserSession = function setSignInUserSession(signInUserSession) {\\n    this.clearCachedUserData();\\n    this.signInUserSession = signInUserSession;\\n    this.cacheTokens();\\n  }\\n  /**\\n   * @returns {CognitoUserSession} the current session for this user\\n   */\\n  ;\\n\\n  _proto.getSignInUserSession = function getSignInUserSession() {\\n    return this.signInUserSession;\\n  }\\n  /**\\n   * @returns {string} the user's username\\n   */\\n  ;\\n\\n  _proto.getUsername = function getUsername() {\\n    return this.username;\\n  }\\n  /**\\n   * @returns {String} the authentication flow type\\n   */\\n  ;\\n\\n  _proto.getAuthenticationFlowType = function getAuthenticationFlowType() {\\n    return this.authenticationFlowType;\\n  }\\n  /**\\n   * sets authentication flow type\\n   * @param {string} authenticationFlowType New value.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.setAuthenticationFlowType = function setAuthenticationFlowType(authenticationFlowType) {\\n    this.authenticationFlowType = authenticationFlowType;\\n  }\\n  /**\\n   * This is used for authenticating the user through the custom authentication flow.\\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {customChallenge} callback.customChallenge Custom challenge\\n   *        response required to continue.\\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.initiateAuth = function initiateAuth(authDetails, callback) {\\n    var _this = this;\\n\\n    var authParameters = authDetails.getAuthParameters();\\n    authParameters.USERNAME = this.username;\\n    var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\\n    var jsonReq = {\\n      AuthFlow: 'CUSTOM_AUTH',\\n      ClientId: this.pool.getClientId(),\\n      AuthParameters: authParameters,\\n      ClientMetadata: clientMetaData\\n    };\\n\\n    if (this.getUserContextData()) {\\n      jsonReq.UserContextData = this.getUserContextData();\\n    }\\n\\n    this.client.request('InitiateAuth', jsonReq, function (err, data) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      var challengeName = data.ChallengeName;\\n      var challengeParameters = data.ChallengeParameters;\\n\\n      if (challengeName === 'CUSTOM_CHALLENGE') {\\n        _this.Session = data.Session;\\n        return callback.customChallenge(challengeParameters);\\n      }\\n\\n      _this.signInUserSession = _this.getCognitoUserSession(data.AuthenticationResult);\\n\\n      _this.cacheTokens();\\n\\n      return callback.onSuccess(_this.signInUserSession);\\n    });\\n  }\\n  /**\\n   * This is used for authenticating the user.\\n   * stuff\\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {newPasswordRequired} callback.newPasswordRequired new\\n   *        password and any required attributes are required to continue\\n   * @param {mfaRequired} callback.mfaRequired MFA code\\n   *        required to continue.\\n   * @param {customChallenge} callback.customChallenge Custom challenge\\n   *        response required to continue.\\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.authenticateUser = function authenticateUser(authDetails, callback) {\\n    if (this.authenticationFlowType === 'USER_PASSWORD_AUTH') {\\n      return this.authenticateUserPlainUsernamePassword(authDetails, callback);\\n    } else if (this.authenticationFlowType === 'USER_SRP_AUTH' || this.authenticationFlowType === 'CUSTOM_AUTH') {\\n      return this.authenticateUserDefaultAuth(authDetails, callback);\\n    }\\n\\n    return callback.onFailure(new Error('Authentication flow type is invalid.'));\\n  }\\n  /**\\n   * PRIVATE ONLY: This is an internal only method and should not\\n   * be directly called by the consumers.\\n   * It calls the AuthenticationHelper for SRP related\\n   * stuff\\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {newPasswordRequired} callback.newPasswordRequired new\\n   *        password and any required attributes are required to continue\\n   * @param {mfaRequired} callback.mfaRequired MFA code\\n   *        required to continue.\\n   * @param {customChallenge} callback.customChallenge Custom challenge\\n   *        response required to continue.\\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.authenticateUserDefaultAuth = function authenticateUserDefaultAuth(authDetails, callback) {\\n    var _this2 = this;\\n\\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\\n    var dateHelper = new DateHelper();\\n    var serverBValue;\\n    var salt;\\n    var authParameters = {};\\n\\n    if (this.deviceKey != null) {\\n      authParameters.DEVICE_KEY = this.deviceKey;\\n    }\\n\\n    authParameters.USERNAME = this.username;\\n    authenticationHelper.getLargeAValue(function (errOnAValue, aValue) {\\n      // getLargeAValue callback start\\n      if (errOnAValue) {\\n        callback.onFailure(errOnAValue);\\n      }\\n\\n      authParameters.SRP_A = aValue.toString(16);\\n\\n      if (_this2.authenticationFlowType === 'CUSTOM_AUTH') {\\n        authParameters.CHALLENGE_NAME = 'SRP_A';\\n      }\\n\\n      var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\\n      var jsonReq = {\\n        AuthFlow: _this2.authenticationFlowType,\\n        ClientId: _this2.pool.getClientId(),\\n        AuthParameters: authParameters,\\n        ClientMetadata: clientMetaData\\n      };\\n\\n      if (_this2.getUserContextData(_this2.username)) {\\n        jsonReq.UserContextData = _this2.getUserContextData(_this2.username);\\n      }\\n\\n      _this2.client.request('InitiateAuth', jsonReq, function (err, data) {\\n        if (err) {\\n          return callback.onFailure(err);\\n        }\\n\\n        var challengeParameters = data.ChallengeParameters;\\n        _this2.username = challengeParameters.USER_ID_FOR_SRP;\\n        serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\\n        salt = new BigInteger(challengeParameters.SALT, 16);\\n\\n        _this2.getCachedDeviceKeyAndPassword();\\n\\n        authenticationHelper.getPasswordAuthenticationKey(_this2.username, authDetails.getPassword(), serverBValue, salt, function (errOnHkdf, hkdf) {\\n          // getPasswordAuthenticationKey callback start\\n          if (errOnHkdf) {\\n            callback.onFailure(errOnHkdf);\\n          }\\n\\n          var dateNow = dateHelper.getNowString();\\n          var message = CryptoJS.lib.WordArray.create(Buffer.concat([Buffer.from(_this2.pool.getUserPoolId().split('_')[1], 'utf8'), Buffer.from(_this2.username, 'utf8'), Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), Buffer.from(dateNow, 'utf8')]));\\n          var key = CryptoJS.lib.WordArray.create(hkdf);\\n          var signatureString = Base64.stringify(HmacSHA256(message, key));\\n          var challengeResponses = {};\\n          challengeResponses.USERNAME = _this2.username;\\n          challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\\n          challengeResponses.TIMESTAMP = dateNow;\\n          challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\\n\\n          if (_this2.deviceKey != null) {\\n            challengeResponses.DEVICE_KEY = _this2.deviceKey;\\n          }\\n\\n          var respondToAuthChallenge = function respondToAuthChallenge(challenge, challengeCallback) {\\n            return _this2.client.request('RespondToAuthChallenge', challenge, function (errChallenge, dataChallenge) {\\n              if (errChallenge && errChallenge.code === 'ResourceNotFoundException' && errChallenge.message.toLowerCase().indexOf('device') !== -1) {\\n                challengeResponses.DEVICE_KEY = null;\\n                _this2.deviceKey = null;\\n                _this2.randomPassword = null;\\n                _this2.deviceGroupKey = null;\\n\\n                _this2.clearCachedDeviceKeyAndPassword();\\n\\n                return respondToAuthChallenge(challenge, challengeCallback);\\n              }\\n\\n              return challengeCallback(errChallenge, dataChallenge);\\n            });\\n          };\\n\\n          var jsonReqResp = {\\n            ChallengeName: 'PASSWORD_VERIFIER',\\n            ClientId: _this2.pool.getClientId(),\\n            ChallengeResponses: challengeResponses,\\n            Session: data.Session,\\n            ClientMetadata: clientMetaData\\n          };\\n\\n          if (_this2.getUserContextData()) {\\n            jsonReqResp.UserContextData = _this2.getUserContextData();\\n          }\\n\\n          respondToAuthChallenge(jsonReqResp, function (errAuthenticate, dataAuthenticate) {\\n            if (errAuthenticate) {\\n              return callback.onFailure(errAuthenticate);\\n            }\\n\\n            return _this2.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\\n          });\\n          return undefined; // getPasswordAuthenticationKey callback end\\n        });\\n        return undefined;\\n      }); // getLargeAValue callback end\\n\\n    });\\n  }\\n  /**\\n   * PRIVATE ONLY: This is an internal only method and should not\\n   * be directly called by the consumers.\\n   * @param {AuthenticationDetails} authDetails Contains the authentication data.\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {mfaRequired} callback.mfaRequired MFA code\\n   *        required to continue.\\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.authenticateUserPlainUsernamePassword = function authenticateUserPlainUsernamePassword(authDetails, callback) {\\n    var _this3 = this;\\n\\n    var authParameters = {};\\n    authParameters.USERNAME = this.username;\\n    authParameters.PASSWORD = authDetails.getPassword();\\n\\n    if (!authParameters.PASSWORD) {\\n      callback.onFailure(new Error('PASSWORD parameter is required'));\\n      return;\\n    }\\n\\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\\n    this.getCachedDeviceKeyAndPassword();\\n\\n    if (this.deviceKey != null) {\\n      authParameters.DEVICE_KEY = this.deviceKey;\\n    }\\n\\n    var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\\n    var jsonReq = {\\n      AuthFlow: 'USER_PASSWORD_AUTH',\\n      ClientId: this.pool.getClientId(),\\n      AuthParameters: authParameters,\\n      ClientMetadata: clientMetaData\\n    };\\n\\n    if (this.getUserContextData(this.username)) {\\n      jsonReq.UserContextData = this.getUserContextData(this.username);\\n    } // USER_PASSWORD_AUTH happens in a single round-trip: client sends userName and password,\\n    // Cognito UserPools verifies password and returns tokens.\\n\\n\\n    this.client.request('InitiateAuth', jsonReq, function (err, authResult) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      return _this3.authenticateUserInternal(authResult, authenticationHelper, callback);\\n    });\\n  }\\n  /**\\n   * PRIVATE ONLY: This is an internal only method and should not\\n   * be directly called by the consumers.\\n   * @param {object} dataAuthenticate authentication data\\n   * @param {object} authenticationHelper helper created\\n   * @param {callback} callback passed on from caller\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.authenticateUserInternal = function authenticateUserInternal(dataAuthenticate, authenticationHelper, callback) {\\n    var _this4 = this;\\n\\n    var challengeName = dataAuthenticate.ChallengeName;\\n    var challengeParameters = dataAuthenticate.ChallengeParameters;\\n\\n    if (challengeName === 'SMS_MFA') {\\n      this.Session = dataAuthenticate.Session;\\n      return callback.mfaRequired(challengeName, challengeParameters);\\n    }\\n\\n    if (challengeName === 'SELECT_MFA_TYPE') {\\n      this.Session = dataAuthenticate.Session;\\n      return callback.selectMFAType(challengeName, challengeParameters);\\n    }\\n\\n    if (challengeName === 'MFA_SETUP') {\\n      this.Session = dataAuthenticate.Session;\\n      return callback.mfaSetup(challengeName, challengeParameters);\\n    }\\n\\n    if (challengeName === 'SOFTWARE_TOKEN_MFA') {\\n      this.Session = dataAuthenticate.Session;\\n      return callback.totpRequired(challengeName, challengeParameters);\\n    }\\n\\n    if (challengeName === 'CUSTOM_CHALLENGE') {\\n      this.Session = dataAuthenticate.Session;\\n      return callback.customChallenge(challengeParameters);\\n    }\\n\\n    if (challengeName === 'NEW_PASSWORD_REQUIRED') {\\n      this.Session = dataAuthenticate.Session;\\n      var userAttributes = null;\\n      var rawRequiredAttributes = null;\\n      var requiredAttributes = [];\\n      var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\\n\\n      if (challengeParameters) {\\n        userAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.userAttributes);\\n        rawRequiredAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.requiredAttributes);\\n      }\\n\\n      if (rawRequiredAttributes) {\\n        for (var i = 0; i < rawRequiredAttributes.length; i++) {\\n          requiredAttributes[i] = rawRequiredAttributes[i].substr(userAttributesPrefix.length);\\n        }\\n      }\\n\\n      return callback.newPasswordRequired(userAttributes, requiredAttributes);\\n    }\\n\\n    if (challengeName === 'DEVICE_SRP_AUTH') {\\n      this.getDeviceResponse(callback);\\n      return undefined;\\n    }\\n\\n    this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\\n    this.challengeName = challengeName;\\n    this.cacheTokens();\\n    var newDeviceMetadata = dataAuthenticate.AuthenticationResult.NewDeviceMetadata;\\n\\n    if (newDeviceMetadata == null) {\\n      return callback.onSuccess(this.signInUserSession);\\n    }\\n\\n    authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey, function (errGenHash) {\\n      if (errGenHash) {\\n        return callback.onFailure(errGenHash);\\n      }\\n\\n      var deviceSecretVerifierConfig = {\\n        Salt: Buffer.from(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\\n        PasswordVerifier: Buffer.from(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\\n      };\\n      _this4.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\\n      _this4.deviceGroupKey = newDeviceMetadata.DeviceGroupKey;\\n      _this4.randomPassword = authenticationHelper.getRandomPassword();\\n\\n      _this4.client.request('ConfirmDevice', {\\n        DeviceKey: newDeviceMetadata.DeviceKey,\\n        AccessToken: _this4.signInUserSession.getAccessToken().getJwtToken(),\\n        DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\\n        DeviceName: userAgent\\n      }, function (errConfirm, dataConfirm) {\\n        if (errConfirm) {\\n          return callback.onFailure(errConfirm);\\n        }\\n\\n        _this4.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\\n\\n        _this4.cacheDeviceKeyAndPassword();\\n\\n        if (dataConfirm.UserConfirmationNecessary === true) {\\n          return callback.onSuccess(_this4.signInUserSession, dataConfirm.UserConfirmationNecessary);\\n        }\\n\\n        return callback.onSuccess(_this4.signInUserSession);\\n      });\\n\\n      return undefined;\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This method is user to complete the NEW_PASSWORD_REQUIRED challenge.\\n   * Pass the new password with any new user attributes to be updated.\\n   * User attribute keys must be of format userAttributes.<attribute_name>.\\n   * @param {string} newPassword new password for this user\\n   * @param {object} requiredAttributeData map with values for all required attributes\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {mfaRequired} callback.mfaRequired MFA code required to continue.\\n   * @param {customChallenge} callback.customChallenge Custom challenge\\n   *         response required to continue.\\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.completeNewPasswordChallenge = function completeNewPasswordChallenge(newPassword, requiredAttributeData, callback, clientMetadata) {\\n    var _this5 = this;\\n\\n    if (!newPassword) {\\n      return callback.onFailure(new Error('New password is required.'));\\n    }\\n\\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\\n    var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\\n    var finalUserAttributes = {};\\n\\n    if (requiredAttributeData) {\\n      Object.keys(requiredAttributeData).forEach(function (key) {\\n        finalUserAttributes[userAttributesPrefix + key] = requiredAttributeData[key];\\n      });\\n    }\\n\\n    finalUserAttributes.NEW_PASSWORD = newPassword;\\n    finalUserAttributes.USERNAME = this.username;\\n    var jsonReq = {\\n      ChallengeName: 'NEW_PASSWORD_REQUIRED',\\n      ClientId: this.pool.getClientId(),\\n      ChallengeResponses: finalUserAttributes,\\n      Session: this.Session,\\n      ClientMetadata: clientMetadata\\n    };\\n\\n    if (this.getUserContextData()) {\\n      jsonReq.UserContextData = this.getUserContextData();\\n    }\\n\\n    this.client.request('RespondToAuthChallenge', jsonReq, function (errAuthenticate, dataAuthenticate) {\\n      if (errAuthenticate) {\\n        return callback.onFailure(errAuthenticate);\\n      }\\n\\n      return _this5.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used to get a session using device authentication. It is called at the end of user\\n   * authentication\\n   *\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   * @private\\n   */\\n  ;\\n\\n  _proto.getDeviceResponse = function getDeviceResponse(callback, clientMetadata) {\\n    var _this6 = this;\\n\\n    var authenticationHelper = new AuthenticationHelper(this.deviceGroupKey);\\n    var dateHelper = new DateHelper();\\n    var authParameters = {};\\n    authParameters.USERNAME = this.username;\\n    authParameters.DEVICE_KEY = this.deviceKey;\\n    authenticationHelper.getLargeAValue(function (errAValue, aValue) {\\n      // getLargeAValue callback start\\n      if (errAValue) {\\n        callback.onFailure(errAValue);\\n      }\\n\\n      authParameters.SRP_A = aValue.toString(16);\\n      var jsonReq = {\\n        ChallengeName: 'DEVICE_SRP_AUTH',\\n        ClientId: _this6.pool.getClientId(),\\n        ChallengeResponses: authParameters,\\n        ClientMetadata: clientMetadata\\n      };\\n\\n      if (_this6.getUserContextData()) {\\n        jsonReq.UserContextData = _this6.getUserContextData();\\n      }\\n\\n      _this6.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\\n        if (err) {\\n          return callback.onFailure(err);\\n        }\\n\\n        var challengeParameters = data.ChallengeParameters;\\n        var serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\\n        var salt = new BigInteger(challengeParameters.SALT, 16);\\n        authenticationHelper.getPasswordAuthenticationKey(_this6.deviceKey, _this6.randomPassword, serverBValue, salt, function (errHkdf, hkdf) {\\n          // getPasswordAuthenticationKey callback start\\n          if (errHkdf) {\\n            return callback.onFailure(errHkdf);\\n          }\\n\\n          var dateNow = dateHelper.getNowString();\\n          var message = CryptoJS.lib.WordArray.create(Buffer.concat([Buffer.from(_this6.deviceGroupKey, 'utf8'), Buffer.from(_this6.deviceKey, 'utf8'), Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), Buffer.from(dateNow, 'utf8')]));\\n          var key = CryptoJS.lib.WordArray.create(hkdf);\\n          var signatureString = Base64.stringify(HmacSHA256(message, key));\\n          var challengeResponses = {};\\n          challengeResponses.USERNAME = _this6.username;\\n          challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\\n          challengeResponses.TIMESTAMP = dateNow;\\n          challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\\n          challengeResponses.DEVICE_KEY = _this6.deviceKey;\\n          var jsonReqResp = {\\n            ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\\n            ClientId: _this6.pool.getClientId(),\\n            ChallengeResponses: challengeResponses,\\n            Session: data.Session\\n          };\\n\\n          if (_this6.getUserContextData()) {\\n            jsonReqResp.UserContextData = _this6.getUserContextData();\\n          }\\n\\n          _this6.client.request('RespondToAuthChallenge', jsonReqResp, function (errAuthenticate, dataAuthenticate) {\\n            if (errAuthenticate) {\\n              return callback.onFailure(errAuthenticate);\\n            }\\n\\n            _this6.signInUserSession = _this6.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\\n\\n            _this6.cacheTokens();\\n\\n            return callback.onSuccess(_this6.signInUserSession);\\n          });\\n\\n          return undefined; // getPasswordAuthenticationKey callback end\\n        });\\n        return undefined;\\n      }); // getLargeAValue callback end\\n\\n    });\\n  }\\n  /**\\n   * This is used for a certain user to confirm the registration by using a confirmation code\\n   * @param {string} confirmationCode Code entered by user.\\n   * @param {bool} forceAliasCreation Allow migrating from an existing email / phone number.\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.confirmRegistration = function confirmRegistration(confirmationCode, forceAliasCreation, callback, clientMetadata) {\\n    var jsonReq = {\\n      ClientId: this.pool.getClientId(),\\n      ConfirmationCode: confirmationCode,\\n      Username: this.username,\\n      ForceAliasCreation: forceAliasCreation,\\n      ClientMetadata: clientMetadata\\n    };\\n\\n    if (this.getUserContextData()) {\\n      jsonReq.UserContextData = this.getUserContextData();\\n    }\\n\\n    this.client.request('ConfirmSignUp', jsonReq, function (err) {\\n      if (err) {\\n        return callback(err, null);\\n      }\\n\\n      return callback(null, 'SUCCESS');\\n    });\\n  }\\n  /**\\n   * This is used by the user once he has the responses to a custom challenge\\n   * @param {string} answerChallenge The custom challenge answer.\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {customChallenge} callback.customChallenge\\n   *    Custom challenge response required to continue.\\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.sendCustomChallengeAnswer = function sendCustomChallengeAnswer(answerChallenge, callback, clientMetadata) {\\n    var _this7 = this;\\n\\n    var challengeResponses = {};\\n    challengeResponses.USERNAME = this.username;\\n    challengeResponses.ANSWER = answerChallenge;\\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\\n    this.getCachedDeviceKeyAndPassword();\\n\\n    if (this.deviceKey != null) {\\n      challengeResponses.DEVICE_KEY = this.deviceKey;\\n    }\\n\\n    var jsonReq = {\\n      ChallengeName: 'CUSTOM_CHALLENGE',\\n      ChallengeResponses: challengeResponses,\\n      ClientId: this.pool.getClientId(),\\n      Session: this.Session,\\n      ClientMetadata: clientMetadata\\n    };\\n\\n    if (this.getUserContextData()) {\\n      jsonReq.UserContextData = this.getUserContextData();\\n    }\\n\\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      return _this7.authenticateUserInternal(data, authenticationHelper, callback);\\n    });\\n  }\\n  /**\\n   * This is used by the user once he has an MFA code\\n   * @param {string} confirmationCode The MFA code entered by the user.\\n   * @param {object} callback Result callback map.\\n   * @param {string} mfaType The mfa we are replying to.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.sendMFACode = function sendMFACode(confirmationCode, callback, mfaType, clientMetadata) {\\n    var _this8 = this;\\n\\n    var challengeResponses = {};\\n    challengeResponses.USERNAME = this.username;\\n    challengeResponses.SMS_MFA_CODE = confirmationCode;\\n    var mfaTypeSelection = mfaType || 'SMS_MFA';\\n\\n    if (mfaTypeSelection === 'SOFTWARE_TOKEN_MFA') {\\n      challengeResponses.SOFTWARE_TOKEN_MFA_CODE = confirmationCode;\\n    }\\n\\n    if (this.deviceKey != null) {\\n      challengeResponses.DEVICE_KEY = this.deviceKey;\\n    }\\n\\n    var jsonReq = {\\n      ChallengeName: mfaTypeSelection,\\n      ChallengeResponses: challengeResponses,\\n      ClientId: this.pool.getClientId(),\\n      Session: this.Session,\\n      ClientMetadata: clientMetadata\\n    };\\n\\n    if (this.getUserContextData()) {\\n      jsonReq.UserContextData = this.getUserContextData();\\n    }\\n\\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, dataAuthenticate) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      var challengeName = dataAuthenticate.ChallengeName;\\n\\n      if (challengeName === 'DEVICE_SRP_AUTH') {\\n        _this8.getDeviceResponse(callback);\\n\\n        return undefined;\\n      }\\n\\n      _this8.signInUserSession = _this8.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\\n\\n      _this8.cacheTokens();\\n\\n      if (dataAuthenticate.AuthenticationResult.NewDeviceMetadata == null) {\\n        return callback.onSuccess(_this8.signInUserSession);\\n      }\\n\\n      var authenticationHelper = new AuthenticationHelper(_this8.pool.getUserPoolId().split('_')[1]);\\n      authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey, function (errGenHash) {\\n        if (errGenHash) {\\n          return callback.onFailure(errGenHash);\\n        }\\n\\n        var deviceSecretVerifierConfig = {\\n          Salt: Buffer.from(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\\n          PasswordVerifier: Buffer.from(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\\n        };\\n        _this8.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\\n        _this8.deviceGroupKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey;\\n        _this8.randomPassword = authenticationHelper.getRandomPassword();\\n\\n        _this8.client.request('ConfirmDevice', {\\n          DeviceKey: dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey,\\n          AccessToken: _this8.signInUserSession.getAccessToken().getJwtToken(),\\n          DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\\n          DeviceName: userAgent\\n        }, function (errConfirm, dataConfirm) {\\n          if (errConfirm) {\\n            return callback.onFailure(errConfirm);\\n          }\\n\\n          _this8.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\\n\\n          _this8.cacheDeviceKeyAndPassword();\\n\\n          if (dataConfirm.UserConfirmationNecessary === true) {\\n            return callback.onSuccess(_this8.signInUserSession, dataConfirm.UserConfirmationNecessary);\\n          }\\n\\n          return callback.onSuccess(_this8.signInUserSession);\\n        });\\n\\n        return undefined;\\n      });\\n      return undefined;\\n    });\\n  }\\n  /**\\n   * This is used by an authenticated user to change the current password\\n   * @param {string} oldUserPassword The current password.\\n   * @param {string} newUserPassword The requested new password.\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.changePassword = function changePassword(oldUserPassword, newUserPassword, callback, clientMetadata) {\\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\\n      return callback(new Error('User is not authenticated'), null);\\n    }\\n\\n    this.client.request('ChangePassword', {\\n      PreviousPassword: oldUserPassword,\\n      ProposedPassword: newUserPassword,\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\\n      ClientMetadata: clientMetadata\\n    }, function (err) {\\n      if (err) {\\n        return callback(err, null);\\n      }\\n\\n      return callback(null, 'SUCCESS');\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used by an authenticated user to enable MFA for itself\\n   * @deprecated\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.enableMFA = function enableMFA(callback) {\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback(new Error('User is not authenticated'), null);\\n    }\\n\\n    var mfaOptions = [];\\n    var mfaEnabled = {\\n      DeliveryMedium: 'SMS',\\n      AttributeName: 'phone_number'\\n    };\\n    mfaOptions.push(mfaEnabled);\\n    this.client.request('SetUserSettings', {\\n      MFAOptions: mfaOptions,\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\\n    }, function (err) {\\n      if (err) {\\n        return callback(err, null);\\n      }\\n\\n      return callback(null, 'SUCCESS');\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used by an authenticated user to enable MFA for itself\\n   * @param {IMfaSettings} smsMfaSettings the sms mfa settings\\n   * @param {IMFASettings} softwareTokenMfaSettings the software token mfa settings\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.setUserMfaPreference = function setUserMfaPreference(smsMfaSettings, softwareTokenMfaSettings, callback) {\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback(new Error('User is not authenticated'), null);\\n    }\\n\\n    this.client.request('SetUserMFAPreference', {\\n      SMSMfaSettings: smsMfaSettings,\\n      SoftwareTokenMfaSettings: softwareTokenMfaSettings,\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\\n    }, function (err) {\\n      if (err) {\\n        return callback(err, null);\\n      }\\n\\n      return callback(null, 'SUCCESS');\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used by an authenticated user to disable MFA for itself\\n   * @deprecated\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.disableMFA = function disableMFA(callback) {\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback(new Error('User is not authenticated'), null);\\n    }\\n\\n    var mfaOptions = [];\\n    this.client.request('SetUserSettings', {\\n      MFAOptions: mfaOptions,\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\\n    }, function (err) {\\n      if (err) {\\n        return callback(err, null);\\n      }\\n\\n      return callback(null, 'SUCCESS');\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used by an authenticated user to delete itself\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.deleteUser = function deleteUser(callback, clientMetadata) {\\n    var _this9 = this;\\n\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback(new Error('User is not authenticated'), null);\\n    }\\n\\n    this.client.request('DeleteUser', {\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\\n      ClientMetadata: clientMetadata\\n    }, function (err) {\\n      if (err) {\\n        return callback(err, null);\\n      }\\n\\n      _this9.clearCachedUser();\\n\\n      return callback(null, 'SUCCESS');\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * @typedef {CognitoUserAttribute | { Name:string, Value:string }} AttributeArg\\n   */\\n\\n  /**\\n   * This is used by an authenticated user to change a list of attributes\\n   * @param {AttributeArg[]} attributes A list of the new user attributes.\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.updateAttributes = function updateAttributes(attributes, callback, clientMetadata) {\\n    var _this10 = this;\\n\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback(new Error('User is not authenticated'), null);\\n    }\\n\\n    this.client.request('UpdateUserAttributes', {\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\\n      UserAttributes: attributes,\\n      ClientMetadata: clientMetadata\\n    }, function (err) {\\n      if (err) {\\n        return callback(err, null);\\n      } // update cached user\\n\\n\\n      return _this10.getUserData(function () {\\n        return callback(null, 'SUCCESS');\\n      }, {\\n        bypassCache: true\\n      });\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used by an authenticated user to get a list of attributes\\n   * @param {nodeCallback<CognitoUserAttribute[]>} callback Called on success or error.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.getUserAttributes = function getUserAttributes(callback) {\\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\\n      return callback(new Error('User is not authenticated'), null);\\n    }\\n\\n    this.client.request('GetUser', {\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\\n    }, function (err, userData) {\\n      if (err) {\\n        return callback(err, null);\\n      }\\n\\n      var attributeList = [];\\n\\n      for (var i = 0; i < userData.UserAttributes.length; i++) {\\n        var attribute = {\\n          Name: userData.UserAttributes[i].Name,\\n          Value: userData.UserAttributes[i].Value\\n        };\\n        var userAttribute = new CognitoUserAttribute(attribute);\\n        attributeList.push(userAttribute);\\n      }\\n\\n      return callback(null, attributeList);\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used by an authenticated user to get the MFAOptions\\n   * @param {nodeCallback<MFAOptions>} callback Called on success or error.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.getMFAOptions = function getMFAOptions(callback) {\\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\\n      return callback(new Error('User is not authenticated'), null);\\n    }\\n\\n    this.client.request('GetUser', {\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\\n    }, function (err, userData) {\\n      if (err) {\\n        return callback(err, null);\\n      }\\n\\n      return callback(null, userData.MFAOptions);\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used by an authenticated users to get the userData\\n   * @param {nodeCallback<UserData>} callback Called on success or error.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.getUserData = function getUserData(callback, params) {\\n    var _this11 = this;\\n\\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\\n      this.clearCachedUserData();\\n      return callback(new Error('User is not authenticated'), null);\\n    }\\n\\n    var bypassCache = params ? params.bypassCache : false;\\n    var userData = this.storage.getItem(this.userDataKey); // get the cached user data\\n\\n    if (!userData || bypassCache) {\\n      this.client.request('GetUser', {\\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\\n      }, function (err, latestUserData) {\\n        if (err) {\\n          return callback(err, null);\\n        }\\n\\n        _this11.cacheUserData(latestUserData);\\n\\n        var refresh = _this11.signInUserSession.getRefreshToken();\\n\\n        if (refresh && refresh.getToken()) {\\n          _this11.refreshSession(refresh, function (refreshError, data) {\\n            if (refreshError) {\\n              return callback(refreshError, null);\\n            }\\n\\n            return callback(null, latestUserData);\\n          });\\n        } else {\\n          return callback(null, latestUserData);\\n        }\\n      });\\n    } else {\\n      try {\\n        return callback(null, JSON.parse(userData));\\n      } catch (err) {\\n        this.clearCachedUserData();\\n        return callback(err, null);\\n      }\\n    }\\n\\n    return undefined;\\n  }\\n  /**\\n   * This is used by an authenticated user to delete a list of attributes\\n   * @param {string[]} attributeList Names of the attributes to delete.\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.deleteAttributes = function deleteAttributes(attributeList, callback) {\\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\\n      return callback(new Error('User is not authenticated'), null);\\n    }\\n\\n    this.client.request('DeleteUserAttributes', {\\n      UserAttributeNames: attributeList,\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\\n    }, function (err) {\\n      if (err) {\\n        return callback(err, null);\\n      }\\n\\n      return callback(null, 'SUCCESS');\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used by a user to resend a confirmation code\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.resendConfirmationCode = function resendConfirmationCode(callback, clientMetadata) {\\n    var jsonReq = {\\n      ClientId: this.pool.getClientId(),\\n      Username: this.username,\\n      ClientMetadata: clientMetadata\\n    };\\n    this.client.request('ResendConfirmationCode', jsonReq, function (err, result) {\\n      if (err) {\\n        return callback(err, null);\\n      }\\n\\n      return callback(null, result);\\n    });\\n  }\\n  /**\\n   * This is used to get a session, either from the session object\\n   * or from  the local storage, or by using a refresh token\\n   *\\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.getSession = function getSession(callback) {\\n    if (this.username == null) {\\n      return callback(new Error('Username is null. Cannot retrieve a new session'), null);\\n    }\\n\\n    if (this.signInUserSession != null && this.signInUserSession.isValid()) {\\n      return callback(null, this.signInUserSession);\\n    }\\n\\n    var keyPrefix = \\\"CognitoIdentityServiceProvider.\\\" + this.pool.getClientId() + \\\".\\\" + this.username;\\n    var idTokenKey = keyPrefix + \\\".idToken\\\";\\n    var accessTokenKey = keyPrefix + \\\".accessToken\\\";\\n    var refreshTokenKey = keyPrefix + \\\".refreshToken\\\";\\n    var clockDriftKey = keyPrefix + \\\".clockDrift\\\";\\n\\n    if (this.storage.getItem(idTokenKey)) {\\n      var idToken = new CognitoIdToken({\\n        IdToken: this.storage.getItem(idTokenKey)\\n      });\\n      var accessToken = new CognitoAccessToken({\\n        AccessToken: this.storage.getItem(accessTokenKey)\\n      });\\n      var refreshToken = new CognitoRefreshToken({\\n        RefreshToken: this.storage.getItem(refreshTokenKey)\\n      });\\n      var clockDrift = parseInt(this.storage.getItem(clockDriftKey), 0) || 0;\\n      var sessionData = {\\n        IdToken: idToken,\\n        AccessToken: accessToken,\\n        RefreshToken: refreshToken,\\n        ClockDrift: clockDrift\\n      };\\n      var cachedSession = new CognitoUserSession(sessionData);\\n\\n      if (cachedSession.isValid()) {\\n        this.signInUserSession = cachedSession;\\n        return callback(null, this.signInUserSession);\\n      }\\n\\n      if (!refreshToken.getToken()) {\\n        return callback(new Error('Cannot retrieve a new session. Please authenticate.'), null);\\n      }\\n\\n      this.refreshSession(refreshToken, callback);\\n    } else {\\n      callback(new Error('Local storage is missing an ID Token, Please authenticate'), null);\\n    }\\n\\n    return undefined;\\n  }\\n  /**\\n   * This uses the refreshToken to retrieve a new session\\n   * @param {CognitoRefreshToken} refreshToken A previous session's refresh token.\\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.refreshSession = function refreshSession(refreshToken, callback, clientMetadata) {\\n    var _this12 = this;\\n\\n    var authParameters = {};\\n    authParameters.REFRESH_TOKEN = refreshToken.getToken();\\n    var keyPrefix = \\\"CognitoIdentityServiceProvider.\\\" + this.pool.getClientId();\\n    var lastUserKey = keyPrefix + \\\".LastAuthUser\\\";\\n\\n    if (this.storage.getItem(lastUserKey)) {\\n      this.username = this.storage.getItem(lastUserKey);\\n      var deviceKeyKey = keyPrefix + \\\".\\\" + this.username + \\\".deviceKey\\\";\\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\\n      authParameters.DEVICE_KEY = this.deviceKey;\\n    }\\n\\n    var jsonReq = {\\n      ClientId: this.pool.getClientId(),\\n      AuthFlow: 'REFRESH_TOKEN_AUTH',\\n      AuthParameters: authParameters,\\n      ClientMetadata: clientMetadata\\n    };\\n\\n    if (this.getUserContextData()) {\\n      jsonReq.UserContextData = this.getUserContextData();\\n    }\\n\\n    this.client.request('InitiateAuth', jsonReq, function (err, authResult) {\\n      if (err) {\\n        if (err.code === 'NotAuthorizedException') {\\n          _this12.clearCachedUser();\\n        }\\n\\n        return callback(err, null);\\n      }\\n\\n      if (authResult) {\\n        var authenticationResult = authResult.AuthenticationResult;\\n\\n        if (!Object.prototype.hasOwnProperty.call(authenticationResult, 'RefreshToken')) {\\n          authenticationResult.RefreshToken = refreshToken.getToken();\\n        }\\n\\n        _this12.signInUserSession = _this12.getCognitoUserSession(authenticationResult);\\n\\n        _this12.cacheTokens();\\n\\n        return callback(null, _this12.signInUserSession);\\n      }\\n\\n      return undefined;\\n    });\\n  }\\n  /**\\n   * This is used to save the session tokens to local storage\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.cacheTokens = function cacheTokens() {\\n    var keyPrefix = \\\"CognitoIdentityServiceProvider.\\\" + this.pool.getClientId();\\n    var idTokenKey = keyPrefix + \\\".\\\" + this.username + \\\".idToken\\\";\\n    var accessTokenKey = keyPrefix + \\\".\\\" + this.username + \\\".accessToken\\\";\\n    var refreshTokenKey = keyPrefix + \\\".\\\" + this.username + \\\".refreshToken\\\";\\n    var clockDriftKey = keyPrefix + \\\".\\\" + this.username + \\\".clockDrift\\\";\\n    var lastUserKey = keyPrefix + \\\".LastAuthUser\\\";\\n    this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\\n    this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\\n    this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\\n    this.storage.setItem(clockDriftKey, \\\"\\\" + this.signInUserSession.getClockDrift());\\n    this.storage.setItem(lastUserKey, this.username);\\n  }\\n  /**\\n   * This is to cache user data\\n   */\\n  ;\\n\\n  _proto.cacheUserData = function cacheUserData(userData) {\\n    this.storage.setItem(this.userDataKey, JSON.stringify(userData));\\n  }\\n  /**\\n   * This is to remove cached user data\\n   */\\n  ;\\n\\n  _proto.clearCachedUserData = function clearCachedUserData() {\\n    this.storage.removeItem(this.userDataKey);\\n  };\\n\\n  _proto.clearCachedUser = function clearCachedUser() {\\n    this.clearCachedTokens();\\n    this.clearCachedUserData();\\n  }\\n  /**\\n   * This is used to cache the device key and device group and device password\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.cacheDeviceKeyAndPassword = function cacheDeviceKeyAndPassword() {\\n    var keyPrefix = \\\"CognitoIdentityServiceProvider.\\\" + this.pool.getClientId() + \\\".\\\" + this.username;\\n    var deviceKeyKey = keyPrefix + \\\".deviceKey\\\";\\n    var randomPasswordKey = keyPrefix + \\\".randomPasswordKey\\\";\\n    var deviceGroupKeyKey = keyPrefix + \\\".deviceGroupKey\\\";\\n    this.storage.setItem(deviceKeyKey, this.deviceKey);\\n    this.storage.setItem(randomPasswordKey, this.randomPassword);\\n    this.storage.setItem(deviceGroupKeyKey, this.deviceGroupKey);\\n  }\\n  /**\\n   * This is used to get current device key and device group and device password\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.getCachedDeviceKeyAndPassword = function getCachedDeviceKeyAndPassword() {\\n    var keyPrefix = \\\"CognitoIdentityServiceProvider.\\\" + this.pool.getClientId() + \\\".\\\" + this.username;\\n    var deviceKeyKey = keyPrefix + \\\".deviceKey\\\";\\n    var randomPasswordKey = keyPrefix + \\\".randomPasswordKey\\\";\\n    var deviceGroupKeyKey = keyPrefix + \\\".deviceGroupKey\\\";\\n\\n    if (this.storage.getItem(deviceKeyKey)) {\\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\\n      this.randomPassword = this.storage.getItem(randomPasswordKey);\\n      this.deviceGroupKey = this.storage.getItem(deviceGroupKeyKey);\\n    }\\n  }\\n  /**\\n   * This is used to clear the device key info from local storage\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.clearCachedDeviceKeyAndPassword = function clearCachedDeviceKeyAndPassword() {\\n    var keyPrefix = \\\"CognitoIdentityServiceProvider.\\\" + this.pool.getClientId() + \\\".\\\" + this.username;\\n    var deviceKeyKey = keyPrefix + \\\".deviceKey\\\";\\n    var randomPasswordKey = keyPrefix + \\\".randomPasswordKey\\\";\\n    var deviceGroupKeyKey = keyPrefix + \\\".deviceGroupKey\\\";\\n    this.storage.removeItem(deviceKeyKey);\\n    this.storage.removeItem(randomPasswordKey);\\n    this.storage.removeItem(deviceGroupKeyKey);\\n  }\\n  /**\\n   * This is used to clear the session tokens from local storage\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.clearCachedTokens = function clearCachedTokens() {\\n    var keyPrefix = \\\"CognitoIdentityServiceProvider.\\\" + this.pool.getClientId();\\n    var idTokenKey = keyPrefix + \\\".\\\" + this.username + \\\".idToken\\\";\\n    var accessTokenKey = keyPrefix + \\\".\\\" + this.username + \\\".accessToken\\\";\\n    var refreshTokenKey = keyPrefix + \\\".\\\" + this.username + \\\".refreshToken\\\";\\n    var lastUserKey = keyPrefix + \\\".LastAuthUser\\\";\\n    var clockDriftKey = keyPrefix + \\\".\\\" + this.username + \\\".clockDrift\\\";\\n    this.storage.removeItem(idTokenKey);\\n    this.storage.removeItem(accessTokenKey);\\n    this.storage.removeItem(refreshTokenKey);\\n    this.storage.removeItem(lastUserKey);\\n    this.storage.removeItem(clockDriftKey);\\n  }\\n  /**\\n   * This is used to build a user session from tokens retrieved in the authentication result\\n   * @param {object} authResult Successful auth response from server.\\n   * @returns {CognitoUserSession} The new user session.\\n   * @private\\n   */\\n  ;\\n\\n  _proto.getCognitoUserSession = function getCognitoUserSession(authResult) {\\n    var idToken = new CognitoIdToken(authResult);\\n    var accessToken = new CognitoAccessToken(authResult);\\n    var refreshToken = new CognitoRefreshToken(authResult);\\n    var sessionData = {\\n      IdToken: idToken,\\n      AccessToken: accessToken,\\n      RefreshToken: refreshToken\\n    };\\n    return new CognitoUserSession(sessionData);\\n  }\\n  /**\\n   * This is used to initiate a forgot password request\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {inputVerificationCode?} callback.inputVerificationCode\\n   *    Optional callback raised instead of onSuccess with response data.\\n   * @param {onSuccess} callback.onSuccess Called on success.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.forgotPassword = function forgotPassword(callback, clientMetadata) {\\n    var jsonReq = {\\n      ClientId: this.pool.getClientId(),\\n      Username: this.username,\\n      ClientMetadata: clientMetadata\\n    };\\n\\n    if (this.getUserContextData()) {\\n      jsonReq.UserContextData = this.getUserContextData();\\n    }\\n\\n    this.client.request('ForgotPassword', jsonReq, function (err, data) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      if (typeof callback.inputVerificationCode === 'function') {\\n        return callback.inputVerificationCode(data);\\n      }\\n\\n      return callback.onSuccess(data);\\n    });\\n  }\\n  /**\\n   * This is used to confirm a new password using a confirmationCode\\n   * @param {string} confirmationCode Code entered by user.\\n   * @param {string} newPassword Confirm new password.\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {onSuccess<void>} callback.onSuccess Called on success.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.confirmPassword = function confirmPassword(confirmationCode, newPassword, callback, clientMetadata) {\\n    var jsonReq = {\\n      ClientId: this.pool.getClientId(),\\n      Username: this.username,\\n      ConfirmationCode: confirmationCode,\\n      Password: newPassword,\\n      ClientMetadata: clientMetadata\\n    };\\n\\n    if (this.getUserContextData()) {\\n      jsonReq.UserContextData = this.getUserContextData();\\n    }\\n\\n    this.client.request('ConfirmForgotPassword', jsonReq, function (err) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      return callback.onSuccess();\\n    });\\n  }\\n  /**\\n   * This is used to initiate an attribute confirmation request\\n   * @param {string} attributeName User attribute that needs confirmation.\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {inputVerificationCode} callback.inputVerificationCode Called on success.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.getAttributeVerificationCode = function getAttributeVerificationCode(attributeName, callback, clientMetadata) {\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback.onFailure(new Error('User is not authenticated'));\\n    }\\n\\n    this.client.request('GetUserAttributeVerificationCode', {\\n      AttributeName: attributeName,\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\\n      ClientMetadata: clientMetadata\\n    }, function (err, data) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      if (typeof callback.inputVerificationCode === 'function') {\\n        return callback.inputVerificationCode(data);\\n      }\\n\\n      return callback.onSuccess();\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used to confirm an attribute using a confirmation code\\n   * @param {string} attributeName Attribute being confirmed.\\n   * @param {string} confirmationCode Code entered by user.\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.verifyAttribute = function verifyAttribute(attributeName, confirmationCode, callback) {\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback.onFailure(new Error('User is not authenticated'));\\n    }\\n\\n    this.client.request('VerifyUserAttribute', {\\n      AttributeName: attributeName,\\n      Code: confirmationCode,\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\\n    }, function (err) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      return callback.onSuccess('SUCCESS');\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used to get the device information using the current device key\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device data.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.getDevice = function getDevice(callback) {\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback.onFailure(new Error('User is not authenticated'));\\n    }\\n\\n    this.client.request('GetDevice', {\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\\n      DeviceKey: this.deviceKey\\n    }, function (err, data) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      return callback.onSuccess(data);\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used to forget a specific device\\n   * @param {string} deviceKey Device key.\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.forgetSpecificDevice = function forgetSpecificDevice(deviceKey, callback) {\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback.onFailure(new Error('User is not authenticated'));\\n    }\\n\\n    this.client.request('ForgetDevice', {\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\\n      DeviceKey: deviceKey\\n    }, function (err) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      return callback.onSuccess('SUCCESS');\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used to forget the current device\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.forgetDevice = function forgetDevice(callback) {\\n    var _this13 = this;\\n\\n    this.forgetSpecificDevice(this.deviceKey, {\\n      onFailure: callback.onFailure,\\n      onSuccess: function onSuccess(result) {\\n        _this13.deviceKey = null;\\n        _this13.deviceGroupKey = null;\\n        _this13.randomPassword = null;\\n\\n        _this13.clearCachedDeviceKeyAndPassword();\\n\\n        return callback.onSuccess(result);\\n      }\\n    });\\n  }\\n  /**\\n   * This is used to set the device status as remembered\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.setDeviceStatusRemembered = function setDeviceStatusRemembered(callback) {\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback.onFailure(new Error('User is not authenticated'));\\n    }\\n\\n    this.client.request('UpdateDeviceStatus', {\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\\n      DeviceKey: this.deviceKey,\\n      DeviceRememberedStatus: 'remembered'\\n    }, function (err) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      return callback.onSuccess('SUCCESS');\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used to set the device status as not remembered\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.setDeviceStatusNotRemembered = function setDeviceStatusNotRemembered(callback) {\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback.onFailure(new Error('User is not authenticated'));\\n    }\\n\\n    this.client.request('UpdateDeviceStatus', {\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\\n      DeviceKey: this.deviceKey,\\n      DeviceRememberedStatus: 'not_remembered'\\n    }, function (err) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      return callback.onSuccess('SUCCESS');\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used to list all devices for a user\\n   *\\n   * @param {int} limit the number of devices returned in a call\\n   * @param {string} paginationToken the pagination token in case any was returned before\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device list.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.listDevices = function listDevices(limit, paginationToken, callback) {\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback.onFailure(new Error('User is not authenticated'));\\n    }\\n\\n    this.client.request('ListDevices', {\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\\n      Limit: limit,\\n      PaginationToken: paginationToken\\n    }, function (err, data) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      return callback.onSuccess(data);\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used to globally revoke all tokens issued to a user\\n   * @param {object} callback Result callback map.\\n   * @param {onFailure} callback.onFailure Called on any error.\\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.globalSignOut = function globalSignOut(callback) {\\n    var _this14 = this;\\n\\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\\n      return callback.onFailure(new Error('User is not authenticated'));\\n    }\\n\\n    this.client.request('GlobalSignOut', {\\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\\n    }, function (err) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      _this14.clearCachedUser();\\n\\n      return callback.onSuccess('SUCCESS');\\n    });\\n    return undefined;\\n  }\\n  /**\\n   * This is used for the user to signOut of the application and clear the cached tokens.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.signOut = function signOut() {\\n    this.signInUserSession = null;\\n    this.clearCachedUser();\\n  }\\n  /**\\n   * This is used by a user trying to select a given MFA\\n   * @param {string} answerChallenge the mfa the user wants\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.sendMFASelectionAnswer = function sendMFASelectionAnswer(answerChallenge, callback) {\\n    var _this15 = this;\\n\\n    var challengeResponses = {};\\n    challengeResponses.USERNAME = this.username;\\n    challengeResponses.ANSWER = answerChallenge;\\n    var jsonReq = {\\n      ChallengeName: 'SELECT_MFA_TYPE',\\n      ChallengeResponses: challengeResponses,\\n      ClientId: this.pool.getClientId(),\\n      Session: this.Session\\n    };\\n\\n    if (this.getUserContextData()) {\\n      jsonReq.UserContextData = this.getUserContextData();\\n    }\\n\\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\\n      if (err) {\\n        return callback.onFailure(err);\\n      }\\n\\n      _this15.Session = data.Session;\\n\\n      if (answerChallenge === 'SMS_MFA') {\\n        return callback.mfaRequired(data.challengeName, data.challengeParameters);\\n      }\\n\\n      if (answerChallenge === 'SOFTWARE_TOKEN_MFA') {\\n        return callback.totpRequired(data.challengeName, data.challengeParameters);\\n      }\\n\\n      return undefined;\\n    });\\n  }\\n  /**\\n   * This returns the user context data for advanced security feature.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.getUserContextData = function getUserContextData() {\\n    var pool = this.pool;\\n    return pool.getUserContextData(this.username);\\n  }\\n  /**\\n   * This is used by an authenticated or a user trying to authenticate to associate a TOTP MFA\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.associateSoftwareToken = function associateSoftwareToken(callback) {\\n    var _this16 = this;\\n\\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\\n      this.client.request('AssociateSoftwareToken', {\\n        Session: this.Session\\n      }, function (err, data) {\\n        if (err) {\\n          return callback.onFailure(err);\\n        }\\n\\n        _this16.Session = data.Session;\\n        return callback.associateSecretCode(data.SecretCode);\\n      });\\n    } else {\\n      this.client.request('AssociateSoftwareToken', {\\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\\n      }, function (err, data) {\\n        if (err) {\\n          return callback.onFailure(err);\\n        }\\n\\n        return callback.associateSecretCode(data.SecretCode);\\n      });\\n    }\\n  }\\n  /**\\n   * This is used by an authenticated or a user trying to authenticate to verify a TOTP MFA\\n   * @param {string} totpCode The MFA code entered by the user.\\n   * @param {string} friendlyDeviceName The device name we are assigning to the device.\\n   * @param {nodeCallback<string>} callback Called on success or error.\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.verifySoftwareToken = function verifySoftwareToken(totpCode, friendlyDeviceName, callback) {\\n    var _this17 = this;\\n\\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\\n      this.client.request('VerifySoftwareToken', {\\n        Session: this.Session,\\n        UserCode: totpCode,\\n        FriendlyDeviceName: friendlyDeviceName\\n      }, function (err, data) {\\n        if (err) {\\n          return callback.onFailure(err);\\n        }\\n\\n        _this17.Session = data.Session;\\n        var challengeResponses = {};\\n        challengeResponses.USERNAME = _this17.username;\\n        var jsonReq = {\\n          ChallengeName: 'MFA_SETUP',\\n          ClientId: _this17.pool.getClientId(),\\n          ChallengeResponses: challengeResponses,\\n          Session: _this17.Session\\n        };\\n\\n        if (_this17.getUserContextData()) {\\n          jsonReq.UserContextData = _this17.getUserContextData();\\n        }\\n\\n        _this17.client.request('RespondToAuthChallenge', jsonReq, function (errRespond, dataRespond) {\\n          if (errRespond) {\\n            return callback.onFailure(errRespond);\\n          }\\n\\n          _this17.signInUserSession = _this17.getCognitoUserSession(dataRespond.AuthenticationResult);\\n\\n          _this17.cacheTokens();\\n\\n          return callback.onSuccess(_this17.signInUserSession);\\n        });\\n\\n        return undefined;\\n      });\\n    } else {\\n      this.client.request('VerifySoftwareToken', {\\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\\n        UserCode: totpCode,\\n        FriendlyDeviceName: friendlyDeviceName\\n      }, function (err, data) {\\n        if (err) {\\n          return callback.onFailure(err);\\n        }\\n\\n        return callback.onSuccess(data);\\n      });\\n    }\\n  };\\n\\n  return CognitoUser;\\n}();\\n\\nexport { CognitoUser as default };\",\"// constructor\\nfunction UserAgent() {} // public\\n\\n\\nUserAgent.prototype.userAgent = 'aws-amplify/0.1.x js';\\nexport var appendToCognitoUserAgent = function appendToCognitoUserAgent(content) {\\n  if (!content) {\\n    return;\\n  }\\n\\n  if (UserAgent.prototype.userAgent && !UserAgent.prototype.userAgent.includes(content)) {\\n    UserAgent.prototype.userAgent = UserAgent.prototype.userAgent.concat(' ', content);\\n  }\\n\\n  if (!UserAgent.prototype.userAgent || UserAgent.prototype.userAgent === '') {\\n    UserAgent.prototype.userAgent = content;\\n  }\\n}; // class for defining the amzn user-agent\\n\\nexport default UserAgent;\",\"import UserAgent from './UserAgent';\\n/** @class */\\n\\nvar Client = /*#__PURE__*/function () {\\n  /**\\n   * Constructs a new AWS Cognito Identity Provider client object\\n   * @param {string} region AWS region\\n   * @param {string} endpoint endpoint\\n   */\\n  function Client(region, endpoint) {\\n    this.endpoint = endpoint || \\\"https://cognito-idp.\\\" + region + \\\".amazonaws.com/\\\";\\n  }\\n  /**\\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\\n   * using fetch\\n   * @param {string} operation API operation\\n   * @param {object} params Input parameters\\n   * @param {function} callback Callback called when a response is returned\\n   * @returns {void}\\n   */\\n\\n\\n  var _proto = Client.prototype;\\n\\n  _proto.request = function request(operation, params, callback) {\\n    var headers = {\\n      'Content-Type': 'application/x-amz-json-1.1',\\n      'X-Amz-Target': \\\"AWSCognitoIdentityProviderService.\\\" + operation,\\n      'X-Amz-User-Agent': UserAgent.prototype.userAgent\\n    };\\n    var options = {\\n      headers: headers,\\n      method: 'POST',\\n      mode: 'cors',\\n      cache: 'no-cache',\\n      body: JSON.stringify(params)\\n    };\\n    var response;\\n    var responseJsonData;\\n    fetch(this.endpoint, options).then(function (resp) {\\n      response = resp;\\n      return resp;\\n    }, function (err) {\\n      // If error happens here, the request failed\\n      // if it is TypeError throw network error\\n      if (err instanceof TypeError) {\\n        throw new Error('Network error');\\n      }\\n\\n      throw err;\\n    }).then(function (resp) {\\n      return resp.json()[\\\"catch\\\"](function () {\\n        return {};\\n      });\\n    }).then(function (data) {\\n      // return parsed body stream\\n      if (response.ok) return callback(null, data);\\n      responseJsonData = data; // Taken from aws-sdk-js/lib/protocol/json.js\\n      // eslint-disable-next-line no-underscore-dangle\\n\\n      var code = (data.__type || data.code).split('#').pop();\\n      var error = {\\n        code: code,\\n        name: code,\\n        message: data.message || data.Message || null\\n      };\\n      return callback(error);\\n    })[\\\"catch\\\"](function (err) {\\n      // first check if we have a service error\\n      if (response && response.headers && response.headers.get('x-amzn-errortype')) {\\n        try {\\n          var code = response.headers.get('x-amzn-errortype').split(':')[0];\\n          var error = {\\n            code: code,\\n            name: code,\\n            statusCode: response.status,\\n            message: response.status ? response.status.toString() : null\\n          };\\n          return callback(error);\\n        } catch (ex) {\\n          return callback(err);\\n        } // otherwise check if error is Network error\\n\\n      } else if (err instanceof Error && err.message === 'Network error') {\\n        var _error = {\\n          code: 'NetworkError',\\n          name: err.name,\\n          message: err.message\\n        };\\n        return callback(_error);\\n      } else {\\n        return callback(err);\\n      }\\n    });\\n  };\\n\\n  return Client;\\n}();\\n\\nexport { Client as default };\",\"/*!\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\nimport Client from './Client';\\nimport CognitoUser from './CognitoUser';\\nimport StorageHelper from './StorageHelper';\\n/** @class */\\n\\nvar CognitoUserPool = /*#__PURE__*/function () {\\n  /**\\n   * Constructs a new CognitoUserPool object\\n   * @param {object} data Creation options.\\n   * @param {string} data.UserPoolId Cognito user pool id.\\n   * @param {string} data.ClientId User pool application client id.\\n   * @param {object} data.Storage Optional storage object.\\n   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional:\\n   *        boolean flag indicating if the data collection is enabled\\n   *        to support cognito advanced security features. By default, this\\n   *        flag is set to true.\\n   */\\n  function CognitoUserPool(data) {\\n    var _ref = data || {},\\n        UserPoolId = _ref.UserPoolId,\\n        ClientId = _ref.ClientId,\\n        endpoint = _ref.endpoint,\\n        AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag;\\n\\n    if (!UserPoolId || !ClientId) {\\n      throw new Error('Both UserPoolId and ClientId are required.');\\n    }\\n\\n    if (!/^[\\\\w-]+_.+$/.test(UserPoolId)) {\\n      throw new Error('Invalid UserPoolId format.');\\n    }\\n\\n    var region = UserPoolId.split('_')[0];\\n    this.userPoolId = UserPoolId;\\n    this.clientId = ClientId;\\n    this.client = new Client(region, endpoint);\\n    /**\\n     * By default, AdvancedSecurityDataCollectionFlag is set to true,\\n     * if no input value is provided.\\n     */\\n\\n    this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag !== false;\\n    this.storage = data.Storage || new StorageHelper().getStorage();\\n  }\\n  /**\\n   * @returns {string} the user pool id\\n   */\\n\\n\\n  var _proto = CognitoUserPool.prototype;\\n\\n  _proto.getUserPoolId = function getUserPoolId() {\\n    return this.userPoolId;\\n  }\\n  /**\\n   * @returns {string} the client id\\n   */\\n  ;\\n\\n  _proto.getClientId = function getClientId() {\\n    return this.clientId;\\n  }\\n  /**\\n   * @typedef {object} SignUpResult\\n   * @property {CognitoUser} user New user.\\n   * @property {bool} userConfirmed If the user is already confirmed.\\n   */\\n\\n  /**\\n   * method for signing up a user\\n   * @param {string} username User's username.\\n   * @param {string} password Plain-text initial password entered by user.\\n   * @param {(AttributeArg[])=} userAttributes New user attributes.\\n   * @param {(AttributeArg[])=} validationData Application metadata.\\n   * @param {(AttributeArg[])=} clientMetadata Client metadata.\\n   * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\\n   * @returns {void}\\n   */\\n  ;\\n\\n  _proto.signUp = function signUp(username, password, userAttributes, validationData, callback, clientMetadata) {\\n    var _this = this;\\n\\n    var jsonReq = {\\n      ClientId: this.clientId,\\n      Username: username,\\n      Password: password,\\n      UserAttributes: userAttributes,\\n      ValidationData: validationData,\\n      ClientMetadata: clientMetadata\\n    };\\n\\n    if (this.getUserContextData(username)) {\\n      jsonReq.UserContextData = this.getUserContextData(username);\\n    }\\n\\n    this.client.request('SignUp', jsonReq, function (err, data) {\\n      if (err) {\\n        return callback(err, null);\\n      }\\n\\n      var cognitoUser = {\\n        Username: username,\\n        Pool: _this,\\n        Storage: _this.storage\\n      };\\n      var returnData = {\\n        user: new CognitoUser(cognitoUser),\\n        userConfirmed: data.UserConfirmed,\\n        userSub: data.UserSub,\\n        codeDeliveryDetails: data.CodeDeliveryDetails\\n      };\\n      return callback(null, returnData);\\n    });\\n  }\\n  /**\\n   * method for getting the current user of the application from the local storage\\n   *\\n   * @returns {CognitoUser} the user retrieved from storage\\n   */\\n  ;\\n\\n  _proto.getCurrentUser = function getCurrentUser() {\\n    var lastUserKey = \\\"CognitoIdentityServiceProvider.\\\" + this.clientId + \\\".LastAuthUser\\\";\\n    var lastAuthUser = this.storage.getItem(lastUserKey);\\n\\n    if (lastAuthUser) {\\n      var cognitoUser = {\\n        Username: lastAuthUser,\\n        Pool: this,\\n        Storage: this.storage\\n      };\\n      return new CognitoUser(cognitoUser);\\n    }\\n\\n    return null;\\n  }\\n  /**\\n   * This method returns the encoded data string used for cognito advanced security feature.\\n   * This would be generated only when developer has included the JS used for collecting the\\n   * data on their client. Please refer to documentation to know more about using AdvancedSecurity\\n   * features\\n   * @param {string} username the username for the context data\\n   * @returns {string} the user context data\\n   **/\\n  ;\\n\\n  _proto.getUserContextData = function getUserContextData(username) {\\n    if (typeof AmazonCognitoAdvancedSecurityData === 'undefined') {\\n      return undefined;\\n    }\\n    /* eslint-disable */\\n\\n\\n    var amazonCognitoAdvancedSecurityDataConst = AmazonCognitoAdvancedSecurityData;\\n    /* eslint-enable */\\n\\n    if (this.advancedSecurityDataCollectionFlag) {\\n      var advancedSecurityData = amazonCognitoAdvancedSecurityDataConst.getData(username, this.userPoolId, this.clientId);\\n\\n      if (advancedSecurityData) {\\n        var userContextData = {\\n          EncodedData: advancedSecurityData\\n        };\\n        return userContextData;\\n      }\\n    }\\n\\n    return {};\\n  };\\n\\n  return CognitoUserPool;\\n}();\\n\\nexport { CognitoUserPool as default };\",\"import * as Cookies from 'js-cookie';\\n/** @class */\\n\\nvar CookieStorage = /*#__PURE__*/function () {\\n  /**\\n   * Constructs a new CookieStorage object\\n   * @param {object} data Creation options.\\n   * @param {string} data.domain Cookies domain (mandatory).\\n   * @param {string} data.path Cookies path (default: '/')\\n   * @param {integer} data.expires Cookie expiration (in days, default: 365)\\n   * @param {boolean} data.secure Cookie secure flag (default: true)\\n   */\\n  function CookieStorage(data) {\\n    if (data.domain) {\\n      this.domain = data.domain;\\n    } else {\\n      throw new Error('The domain of cookieStorage can not be undefined.');\\n    }\\n\\n    if (data.path) {\\n      this.path = data.path;\\n    } else {\\n      this.path = '/';\\n    }\\n\\n    if (Object.prototype.hasOwnProperty.call(data, 'expires')) {\\n      this.expires = data.expires;\\n    } else {\\n      this.expires = 365;\\n    }\\n\\n    if (Object.prototype.hasOwnProperty.call(data, 'secure')) {\\n      this.secure = data.secure;\\n    } else {\\n      this.secure = true;\\n    }\\n  }\\n  /**\\n   * This is used to set a specific item in storage\\n   * @param {string} key - the key for the item\\n   * @param {object} value - the value\\n   * @returns {string} value that was set\\n   */\\n\\n\\n  var _proto = CookieStorage.prototype;\\n\\n  _proto.setItem = function setItem(key, value) {\\n    Cookies.set(key, value, {\\n      path: this.path,\\n      expires: this.expires,\\n      domain: this.domain,\\n      secure: this.secure\\n    });\\n    return Cookies.get(key);\\n  }\\n  /**\\n   * This is used to get a specific key from storage\\n   * @param {string} key - the key for the item\\n   * This is used to clear the storage\\n   * @returns {string} the data item\\n   */\\n  ;\\n\\n  _proto.getItem = function getItem(key) {\\n    return Cookies.get(key);\\n  }\\n  /**\\n   * This is used to remove an item from storage\\n   * @param {string} key - the key being set\\n   * @returns {string} value - value that was deleted\\n   */\\n  ;\\n\\n  _proto.removeItem = function removeItem(key) {\\n    return Cookies.remove(key, {\\n      path: this.path,\\n      domain: this.domain,\\n      secure: this.secure\\n    });\\n  }\\n  /**\\n   * This is used to clear the storage\\n   * @returns {string} nothing\\n   */\\n  ;\\n\\n  _proto.clear = function clear() {\\n    var cookies = Cookies.get();\\n    var index;\\n\\n    for (index = 0; index < cookies.length; ++index) {\\n      Cookies.remove(cookies[index]);\\n    }\\n\\n    return {};\\n  };\\n\\n  return CookieStorage;\\n}();\\n\\nexport { CookieStorage as default };\",\"/*!\\n * Copyright 2016 Amazon.com,\\n * Inc. or its affiliates. All Rights Reserved.\\n *\\n * Licensed under the Amazon Software License (the \\\"License\\\").\\n * You may not use this file except in compliance with the\\n * License. A copy of the License is located at\\n *\\n *     http://aws.amazon.com/asl/\\n *\\n * or in the \\\"license\\\" file accompanying this file. This file is\\n * distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n * CONDITIONS OF ANY KIND, express or implied. See the License\\n * for the specific language governing permissions and\\n * limitations under the License.\\n */\\nexport { default as AuthenticationDetails } from './AuthenticationDetails';\\nexport { default as AuthenticationHelper } from './AuthenticationHelper';\\nexport { default as CognitoAccessToken } from './CognitoAccessToken';\\nexport { default as CognitoIdToken } from './CognitoIdToken';\\nexport { default as CognitoRefreshToken } from './CognitoRefreshToken';\\nexport { default as CognitoUser } from './CognitoUser';\\nexport { default as CognitoUserAttribute } from './CognitoUserAttribute';\\nexport { default as CognitoUserPool } from './CognitoUserPool';\\nexport { default as CognitoUserSession } from './CognitoUserSession';\\nexport { default as CookieStorage } from './CookieStorage';\\nexport { default as DateHelper } from './DateHelper';\\nexport { appendToCognitoUserAgent } from './UserAgent';\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{\"8e95644dfa1f725aa66d\":function(e,t,n){\"use strict\";n.r(t);var s,i=function(){function e(e){var t=e||{},n=t.ValidationData,s=t.Username,i=t.Password,r=t.AuthParameters,o=t.ClientMetadata;this.validationData=n||{},this.authParameters=r||{},this.clientMetadata=o||{},this.username=s,this.password=i}var t=e.prototype;return t.getUsername=function(){return this.username},t.getPassword=function(){return this.password},t.getValidationData=function(){return this.validationData},t.getAuthParameters=function(){return this.authParameters},t.getClientMetadata=function(){return this.clientMetadata},e}(),r=n(\"3be624f7e9dc58942c52\"),o=n(\"90720f0892835f2953ee\"),a=n.n(o),u=(n(\"da5a204cf10193220ffc\"),n(\"65b9325da70158dfee83\")),c=n.n(u),h=n(\"60ce0cf575256510d1c7\"),l=n.n(h),f=g;function g(e,t){null!=e&&this.fromString(e,t)}function d(){return new g(null)}var S=\"undefined\"!==typeof navigator;S&&\"Microsoft Internet Explorer\"==navigator.appName?(g.prototype.am=function(e,t,n,s,i,r){for(var o=32767&t,a=t>>15;--r>=0;){var u=32767&this[e],c=this[e++]>>15,h=a*u+c*o;i=((u=o*u+((32767&h)<<15)+n[s]+(1073741823&i))>>>30)+(h>>>15)+a*c+(i>>>30),n[s++]=1073741823&u}return i},s=30):S&&\"Netscape\"!=navigator.appName?(g.prototype.am=function(e,t,n,s,i,r){for(;--r>=0;){var o=t*this[e++]+n[s]+i;i=Math.floor(o/67108864),n[s++]=67108863&o}return i},s=26):(g.prototype.am=function(e,t,n,s,i,r){for(var o=16383&t,a=t>>14;--r>=0;){var u=16383&this[e],c=this[e++]>>14,h=a*u+c*o;i=((u=o*u+((16383&h)<<14)+n[s]+i)>>28)+(h>>14)+a*c,n[s++]=268435455&u}return i},s=28),g.prototype.DB=s,g.prototype.DM=(1<<s)-1,g.prototype.DV=1<<s;g.prototype.FV=Math.pow(2,52),g.prototype.F1=52-s,g.prototype.F2=2*s-52;var C,p,m=\"0123456789abcdefghijklmnopqrstuvwxyz\",v=new Array;for(C=\"0\".charCodeAt(0),p=0;p<=9;++p)v[C++]=p;for(C=\"a\".charCodeAt(0),p=10;p<36;++p)v[C++]=p;for(C=\"A\".charCodeAt(0),p=10;p<36;++p)v[C++]=p;function A(e){return m.charAt(e)}function U(e,t){var n=v[e.charCodeAt(t)];return null==n?-1:n}function D(e){var t=d();return t.fromInt(e),t}function T(e){var t,n=1;return 0!=(t=e>>>16)&&(e=t,n+=16),0!=(t=e>>8)&&(e=t,n+=8),0!=(t=e>>4)&&(e=t,n+=4),0!=(t=e>>2)&&(e=t,n+=2),0!=(t=e>>1)&&(e=t,n+=1),n}function I(e){this.m=e,this.mp=e.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<e.DB-15)-1,this.mt2=2*e.t}I.prototype.convert=function(e){var t=d();return e.abs().dlShiftTo(this.m.t,t),t.divRemTo(this.m,null,t),e.s<0&&t.compareTo(g.ZERO)>0&&this.m.subTo(t,t),t},I.prototype.revert=function(e){var t=d();return e.copyTo(t),this.reduce(t),t},I.prototype.reduce=function(e){for(;e.t<=this.mt2;)e[e.t++]=0;for(var t=0;t<this.m.t;++t){var n=32767&e[t],s=n*this.mpl+((n*this.mph+(e[t]>>15)*this.mpl&this.um)<<15)&e.DM;for(e[n=t+this.m.t]+=this.m.am(0,s,e,t,0,this.m.t);e[n]>=e.DV;)e[n]-=e.DV,e[++n]++}e.clamp(),e.drShiftTo(this.m.t,e),e.compareTo(this.m)>=0&&e.subTo(this.m,e)},I.prototype.mulTo=function(e,t,n){e.multiplyTo(t,n),this.reduce(n)},I.prototype.sqrTo=function(e,t){e.squareTo(t),this.reduce(t)},g.prototype.copyTo=function(e){for(var t=this.t-1;t>=0;--t)e[t]=this[t];e.t=this.t,e.s=this.s},g.prototype.fromInt=function(e){this.t=1,this.s=e<0?-1:0,e>0?this[0]=e:e<-1?this[0]=e+this.DV:this.t=0},g.prototype.fromString=function(e,t){var n;if(16==t)n=4;else if(8==t)n=3;else if(2==t)n=1;else if(32==t)n=5;else{if(4!=t)throw new Error(\"Only radix 2, 4, 8, 16, 32 are supported\");n=2}this.t=0,this.s=0;for(var s=e.length,i=!1,r=0;--s>=0;){var o=U(e,s);o<0?\"-\"==e.charAt(s)&&(i=!0):(i=!1,0==r?this[this.t++]=o:r+n>this.DB?(this[this.t-1]|=(o&(1<<this.DB-r)-1)<<r,this[this.t++]=o>>this.DB-r):this[this.t-1]|=o<<r,(r+=n)>=this.DB&&(r-=this.DB))}this.clamp(),i&&g.ZERO.subTo(this,this)},g.prototype.clamp=function(){for(var e=this.s&this.DM;this.t>0&&this[this.t-1]==e;)--this.t},g.prototype.dlShiftTo=function(e,t){var n;for(n=this.t-1;n>=0;--n)t[n+e]=this[n];for(n=e-1;n>=0;--n)t[n]=0;t.t=this.t+e,t.s=this.s},g.prototype.drShiftTo=function(e,t){for(var n=e;n<this.t;++n)t[n-e]=this[n];t.t=Math.max(this.t-e,0),t.s=this.s},g.prototype.lShiftTo=function(e,t){var n,s=e%this.DB,i=this.DB-s,r=(1<<i)-1,o=Math.floor(e/this.DB),a=this.s<<s&this.DM;for(n=this.t-1;n>=0;--n)t[n+o+1]=this[n]>>i|a,a=(this[n]&r)<<s;for(n=o-1;n>=0;--n)t[n]=0;t[o]=a,t.t=this.t+o+1,t.s=this.s,t.clamp()},g.prototype.rShiftTo=function(e,t){t.s=this.s;var n=Math.floor(e/this.DB);if(n>=this.t)t.t=0;else{var s=e%this.DB,i=this.DB-s,r=(1<<s)-1;t[0]=this[n]>>s;for(var o=n+1;o<this.t;++o)t[o-n-1]|=(this[o]&r)<<i,t[o-n]=this[o]>>s;s>0&&(t[this.t-n-1]|=(this.s&r)<<i),t.t=this.t-n,t.clamp()}},g.prototype.subTo=function(e,t){for(var n=0,s=0,i=Math.min(e.t,this.t);n<i;)s+=this[n]-e[n],t[n++]=s&this.DM,s>>=this.DB;if(e.t<this.t){for(s-=e.s;n<this.t;)s+=this[n],t[n++]=s&this.DM,s>>=this.DB;s+=this.s}else{for(s+=this.s;n<e.t;)s-=e[n],t[n++]=s&this.DM,s>>=this.DB;s-=e.s}t.s=s<0?-1:0,s<-1?t[n++]=this.DV+s:s>0&&(t[n++]=s),t.t=n,t.clamp()},g.prototype.multiplyTo=function(e,t){var n=this.abs(),s=e.abs(),i=n.t;for(t.t=i+s.t;--i>=0;)t[i]=0;for(i=0;i<s.t;++i)t[i+n.t]=n.am(0,s[i],t,i,0,n.t);t.s=0,t.clamp(),this.s!=e.s&&g.ZERO.subTo(t,t)},g.prototype.squareTo=function(e){for(var t=this.abs(),n=e.t=2*t.t;--n>=0;)e[n]=0;for(n=0;n<t.t-1;++n){var s=t.am(n,t[n],e,2*n,0,1);(e[n+t.t]+=t.am(n+1,2*t[n],e,2*n+1,s,t.t-n-1))>=t.DV&&(e[n+t.t]-=t.DV,e[n+t.t+1]=1)}e.t>0&&(e[e.t-1]+=t.am(n,t[n],e,2*n,0,1)),e.s=0,e.clamp()},g.prototype.divRemTo=function(e,t,n){var s=e.abs();if(!(s.t<=0)){var i=this.abs();if(i.t<s.t)return null!=t&&t.fromInt(0),void(null!=n&&this.copyTo(n));null==n&&(n=d());var r=d(),o=this.s,a=e.s,u=this.DB-T(s[s.t-1]);u>0?(s.lShiftTo(u,r),i.lShiftTo(u,n)):(s.copyTo(r),i.copyTo(n));var c=r.t,h=r[c-1];if(0!=h){var l=h*(1<<this.F1)+(c>1?r[c-2]>>this.F2:0),f=this.FV/l,S=(1<<this.F1)/l,C=1<<this.F2,p=n.t,m=p-c,v=null==t?d():t;for(r.dlShiftTo(m,v),n.compareTo(v)>=0&&(n[n.t++]=1,n.subTo(v,n)),g.ONE.dlShiftTo(c,v),v.subTo(r,r);r.t<c;)r[r.t++]=0;for(;--m>=0;){var A=n[--p]==h?this.DM:Math.floor(n[p]*f+(n[p-1]+C)*S);if((n[p]+=r.am(0,A,n,m,0,c))<A)for(r.dlShiftTo(m,v),n.subTo(v,n);n[p]<--A;)n.subTo(v,n)}null!=t&&(n.drShiftTo(c,t),o!=a&&g.ZERO.subTo(t,t)),n.t=c,n.clamp(),u>0&&n.rShiftTo(u,n),o<0&&g.ZERO.subTo(n,n)}}},g.prototype.invDigit=function(){if(this.t<1)return 0;var e=this[0];if(0==(1&e))return 0;var t=3&e;return(t=(t=(t=(t=t*(2-(15&e)*t)&15)*(2-(255&e)*t)&255)*(2-((65535&e)*t&65535))&65535)*(2-e*t%this.DV)%this.DV)>0?this.DV-t:-t},g.prototype.addTo=function(e,t){for(var n=0,s=0,i=Math.min(e.t,this.t);n<i;)s+=this[n]+e[n],t[n++]=s&this.DM,s>>=this.DB;if(e.t<this.t){for(s+=e.s;n<this.t;)s+=this[n],t[n++]=s&this.DM,s>>=this.DB;s+=this.s}else{for(s+=this.s;n<e.t;)s+=e[n],t[n++]=s&this.DM,s>>=this.DB;s+=e.s}t.s=s<0?-1:0,s>0?t[n++]=s:s<-1&&(t[n++]=this.DV+s),t.t=n,t.clamp()},g.prototype.toString=function(e){if(this.s<0)return\"-\"+this.negate().toString(e);var t;if(16==e)t=4;else if(8==e)t=3;else if(2==e)t=1;else if(32==e)t=5;else{if(4!=e)throw new Error(\"Only radix 2, 4, 8, 16, 32 are supported\");t=2}var n,s=(1<<t)-1,i=!1,r=\"\",o=this.t,a=this.DB-o*this.DB%t;if(o-- >0)for(a<this.DB&&(n=this[o]>>a)>0&&(i=!0,r=A(n));o>=0;)a<t?(n=(this[o]&(1<<a)-1)<<t-a,n|=this[--o]>>(a+=this.DB-t)):(n=this[o]>>(a-=t)&s,a<=0&&(a+=this.DB,--o)),n>0&&(i=!0),i&&(r+=A(n));return i?r:\"0\"},g.prototype.negate=function(){var e=d();return g.ZERO.subTo(this,e),e},g.prototype.abs=function(){return this.s<0?this.negate():this},g.prototype.compareTo=function(e){var t=this.s-e.s;if(0!=t)return t;var n=this.t;if(0!=(t=n-e.t))return this.s<0?-t:t;for(;--n>=0;)if(0!=(t=this[n]-e[n]))return t;return 0},g.prototype.bitLength=function(){return this.t<=0?0:this.DB*(this.t-1)+T(this[this.t-1]^this.s&this.DM)},g.prototype.mod=function(e){var t=d();return this.abs().divRemTo(e,null,t),this.s<0&&t.compareTo(g.ZERO)>0&&e.subTo(t,t),t},g.prototype.equals=function(e){return 0==this.compareTo(e)},g.prototype.add=function(e){var t=d();return this.addTo(e,t),t},g.prototype.subtract=function(e){var t=d();return this.subTo(e,t),t},g.prototype.multiply=function(e){var t=d();return this.multiplyTo(e,t),t},g.prototype.divide=function(e){var t=d();return this.divRemTo(e,t,null),t},g.prototype.modPow=function(e,t,n){var s,i=e.bitLength(),r=D(1),o=new I(t);if(i<=0)return r;s=i<18?1:i<48?3:i<144?4:i<768?5:6;var a=new Array,u=3,c=s-1,h=(1<<s)-1;if(a[1]=o.convert(this),s>1){var l=d();for(o.sqrTo(a[1],l);u<=h;)a[u]=d(),o.mulTo(l,a[u-2],a[u]),u+=2}var f,g,S=e.t-1,C=!0,p=d();for(i=T(e[S])-1;S>=0;){for(i>=c?f=e[S]>>i-c&h:(f=(e[S]&(1<<i+1)-1)<<c-i,S>0&&(f|=e[S-1]>>this.DB+i-c)),u=s;0==(1&f);)f>>=1,--u;if((i-=u)<0&&(i+=this.DB,--S),C)a[f].copyTo(r),C=!1;else{for(;u>1;)o.sqrTo(r,p),o.sqrTo(p,r),u-=2;u>0?o.sqrTo(r,p):(g=r,r=p,p=g),o.mulTo(p,a[f],r)}for(;S>=0&&0==(e[S]&1<<i);)o.sqrTo(r,p),g=r,r=p,p=g,--i<0&&(i=this.DB-1,--S)}var m=o.revert(r);return n(null,m),m},g.ZERO=D(0),g.ONE=D(1);var y=function(e){return r.Buffer.from(a.a.lib.WordArray.random(e).toString(),\"hex\")},w=\"FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF\",E=function(){function e(e){this.N=new f(w,16),this.g=new f(\"2\",16),this.k=new f(this.hexHash(\"00\"+this.N.toString(16)+\"0\"+this.g.toString(16)),16),this.smallAValue=this.generateRandomSmallA(),this.getLargeAValue(function(){}),this.infoBits=r.Buffer.from(\"Caldera Derived Key\",\"utf8\"),this.poolName=e}var t=e.prototype;return t.getSmallAValue=function(){return this.smallAValue},t.getLargeAValue=function(e){var t=this;this.largeAValue?e(null,this.largeAValue):this.calculateA(this.smallAValue,function(n,s){n&&e(n,null),t.largeAValue=s,e(null,t.largeAValue)})},t.generateRandomSmallA=function(){var e=y(128).toString(\"hex\");return new f(e,16).mod(this.N)},t.generateRandomString=function(){return y(40).toString(\"base64\")},t.getRandomPassword=function(){return this.randomPassword},t.getSaltDevices=function(){return this.SaltToHashDevices},t.getVerifierDevices=function(){return this.verifierDevices},t.generateHashDevice=function(e,t,n){var s=this;this.randomPassword=this.generateRandomString();var i=\"\"+e+t+\":\"+this.randomPassword,r=this.hash(i),o=y(16).toString(\"hex\");this.SaltToHashDevices=this.padHex(new f(o,16)),this.g.modPow(new f(this.hexHash(this.SaltToHashDevices+r),16),this.N,function(e,t){e&&n(e,null),s.verifierDevices=s.padHex(t),n(null,null)})},t.calculateA=function(e,t){var n=this;this.g.modPow(e,this.N,function(e,s){e&&t(e,null),s.mod(n.N).equals(f.ZERO)&&t(new Error(\"Illegal paramater. A mod N cannot be 0.\"),null),t(null,s)})},t.calculateU=function(e,t){return this.UHexHash=this.hexHash(this.padHex(e)+this.padHex(t)),new f(this.UHexHash,16)},t.hash=function(e){var t=e instanceof r.Buffer?a.a.lib.WordArray.create(e):e,n=c()(t).toString();return new Array(64-n.length).join(\"0\")+n},t.hexHash=function(e){return this.hash(r.Buffer.from(e,\"hex\"))},t.computehkdf=function(e,t){var n=a.a.lib.WordArray.create(r.Buffer.concat([this.infoBits,r.Buffer.from(String.fromCharCode(1),\"utf8\")])),s=e instanceof r.Buffer?a.a.lib.WordArray.create(e):e,i=t instanceof r.Buffer?a.a.lib.WordArray.create(t):t,o=l()(s,i),u=l()(n,o);return r.Buffer.from(u.toString(),\"hex\").slice(0,16)},t.getPasswordAuthenticationKey=function(e,t,n,s,i){var o=this;if(n.mod(this.N).equals(f.ZERO))throw new Error(\"B cannot be zero.\");if(this.UValue=this.calculateU(this.largeAValue,n),this.UValue.equals(f.ZERO))throw new Error(\"U cannot be zero.\");var a=\"\"+this.poolName+e+\":\"+t,u=this.hash(a),c=new f(this.hexHash(this.padHex(s)+u),16);this.calculateS(c,n,function(e,t){e&&i(e,null);var n=o.computehkdf(r.Buffer.from(o.padHex(t),\"hex\"),r.Buffer.from(o.padHex(o.UValue.toString(16)),\"hex\"));i(null,n)})},t.calculateS=function(e,t,n){var s=this;this.g.modPow(e,this.N,function(i,r){i&&n(i,null),t.subtract(s.k.multiply(r)).modPow(s.smallAValue.add(s.UValue.multiply(e)),s.N,function(e,t){e&&n(e,null),n(null,t.mod(s.N))})})},t.getNewPasswordRequiredChallengeUserAttributePrefix=function(){return\"userAttributes.\"},t.padHex=function(e){var t=e.toString(16);return t.length%2===1?t=\"0\"+t:-1!==\"89ABCDEFabcdef\".indexOf(t[0])&&(t=\"00\"+t),t},e}(),F=function(){function e(e){this.jwtToken=e||\"\",this.payload=this.decodePayload()}var t=e.prototype;return t.getJwtToken=function(){return this.jwtToken},t.getExpiration=function(){return this.payload.exp},t.getIssuedAt=function(){return this.payload.iat},t.decodePayload=function(){var e=this.jwtToken.split(\".\")[1];try{return JSON.parse(r.Buffer.from(e,\"base64\").toString(\"utf8\"))}catch(e){return{}}},e}();var k=function(e){var t,n;function s(t){var n=(void 0===t?{}:t).AccessToken;return e.call(this,n||\"\")||this}return n=e,(t=s).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,s}(F);var P=function(e){var t,n;function s(t){var n=(void 0===t?{}:t).IdToken;return e.call(this,n||\"\")||this}return n=e,(t=s).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,s}(F),R=function(){function e(e){var t=(void 0===e?{}:e).RefreshToken;this.token=t||\"\"}return e.prototype.getToken=function(){return this.token},e}(),M=n(\"88d4c668583713a33ce8\"),N=n.n(M),B=function(){function e(e){var t=void 0===e?{}:e,n=t.IdToken,s=t.RefreshToken,i=t.AccessToken,r=t.ClockDrift;if(null==i||null==n)throw new Error(\"Id token and Access Token must be present.\");this.idToken=n,this.refreshToken=s,this.accessToken=i,this.clockDrift=void 0===r?this.calculateClockDrift():r}var t=e.prototype;return t.getIdToken=function(){return this.idToken},t.getRefreshToken=function(){return this.refreshToken},t.getAccessToken=function(){return this.accessToken},t.getClockDrift=function(){return this.clockDrift},t.calculateClockDrift=function(){return Math.floor(new Date/1e3)-Math.min(this.accessToken.getIssuedAt(),this.idToken.getIssuedAt())},t.isValid=function(){var e=Math.floor(new Date/1e3)-this.clockDrift;return e<this.accessToken.getExpiration()&&e<this.idToken.getExpiration()},e}(),b=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],V=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],x=function(){function e(){}return e.prototype.getNowString=function(){var e=new Date,t=V[e.getUTCDay()],n=b[e.getUTCMonth()],s=e.getUTCDate(),i=e.getUTCHours();i<10&&(i=\"0\"+i);var r=e.getUTCMinutes();r<10&&(r=\"0\"+r);var o=e.getUTCSeconds();return o<10&&(o=\"0\"+o),t+\" \"+n+\" \"+s+\" \"+i+\":\"+r+\":\"+o+\" UTC \"+e.getUTCFullYear()},e}(),_=function(){function e(e){var t=void 0===e?{}:e,n=t.Name,s=t.Value;this.Name=n||\"\",this.Value=s||\"\"}var t=e.prototype;return t.getValue=function(){return this.Value},t.setValue=function(e){return this.Value=e,this},t.getName=function(){return this.Name},t.setName=function(e){return this.Name=e,this},t.toString=function(){return JSON.stringify(this)},t.toJSON=function(){return{Name:this.Name,Value:this.Value}},e}(),K={},O=function(){function e(){}return e.setItem=function(e,t){return K[e]=t,K[e]},e.getItem=function(e){return Object.prototype.hasOwnProperty.call(K,e)?K[e]:void 0},e.removeItem=function(e){return delete K[e]},e.clear=function(){return K={}},e}(),q=function(){function e(){try{this.storageWindow=window.localStorage,this.storageWindow.setItem(\"aws.cognito.test-ls\",1),this.storageWindow.removeItem(\"aws.cognito.test-ls\")}catch(e){this.storageWindow=O}}return e.prototype.getStorage=function(){return this.storageWindow},e}(),H=\"undefined\"!==typeof navigator?navigator.userAgent:\"nodejs\",W=function(){function e(e){if(null==e||null==e.Username||null==e.Pool)throw new Error(\"Username and pool information are required.\");this.username=e.Username||\"\",this.pool=e.Pool,this.Session=null,this.client=e.Pool.client,this.signInUserSession=null,this.authenticationFlowType=\"USER_SRP_AUTH\",this.storage=e.Storage||(new q).getStorage(),this.keyPrefix=\"CognitoIdentityServiceProvider.\"+this.pool.getClientId(),this.userDataKey=this.keyPrefix+\".\"+this.username+\".userData\"}var t=e.prototype;return t.setSignInUserSession=function(e){this.clearCachedUserData(),this.signInUserSession=e,this.cacheTokens()},t.getSignInUserSession=function(){return this.signInUserSession},t.getUsername=function(){return this.username},t.getAuthenticationFlowType=function(){return this.authenticationFlowType},t.setAuthenticationFlowType=function(e){this.authenticationFlowType=e},t.initiateAuth=function(e,t){var n=this,s=e.getAuthParameters();s.USERNAME=this.username;var i=0!==Object.keys(e.getValidationData()).length?e.getValidationData():e.getClientMetadata(),r={AuthFlow:\"CUSTOM_AUTH\",ClientId:this.pool.getClientId(),AuthParameters:s,ClientMetadata:i};this.getUserContextData()&&(r.UserContextData=this.getUserContextData()),this.client.request(\"InitiateAuth\",r,function(e,s){if(e)return t.onFailure(e);var i=s.ChallengeName,r=s.ChallengeParameters;return\"CUSTOM_CHALLENGE\"===i?(n.Session=s.Session,t.customChallenge(r)):(n.signInUserSession=n.getCognitoUserSession(s.AuthenticationResult),n.cacheTokens(),t.onSuccess(n.signInUserSession))})},t.authenticateUser=function(e,t){return\"USER_PASSWORD_AUTH\"===this.authenticationFlowType?this.authenticateUserPlainUsernamePassword(e,t):\"USER_SRP_AUTH\"===this.authenticationFlowType||\"CUSTOM_AUTH\"===this.authenticationFlowType?this.authenticateUserDefaultAuth(e,t):t.onFailure(new Error(\"Authentication flow type is invalid.\"))},t.authenticateUserDefaultAuth=function(e,t){var n,s,i=this,o=new E(this.pool.getUserPoolId().split(\"_\")[1]),u=new x,c={};null!=this.deviceKey&&(c.DEVICE_KEY=this.deviceKey),c.USERNAME=this.username,o.getLargeAValue(function(h,g){h&&t.onFailure(h),c.SRP_A=g.toString(16),\"CUSTOM_AUTH\"===i.authenticationFlowType&&(c.CHALLENGE_NAME=\"SRP_A\");var d=0!==Object.keys(e.getValidationData()).length?e.getValidationData():e.getClientMetadata(),S={AuthFlow:i.authenticationFlowType,ClientId:i.pool.getClientId(),AuthParameters:c,ClientMetadata:d};i.getUserContextData(i.username)&&(S.UserContextData=i.getUserContextData(i.username)),i.client.request(\"InitiateAuth\",S,function(c,h){if(c)return t.onFailure(c);var g=h.ChallengeParameters;i.username=g.USER_ID_FOR_SRP,n=new f(g.SRP_B,16),s=new f(g.SALT,16),i.getCachedDeviceKeyAndPassword(),o.getPasswordAuthenticationKey(i.username,e.getPassword(),n,s,function(e,n){e&&t.onFailure(e);var s=u.getNowString(),c=a.a.lib.WordArray.create(r.Buffer.concat([r.Buffer.from(i.pool.getUserPoolId().split(\"_\")[1],\"utf8\"),r.Buffer.from(i.username,\"utf8\"),r.Buffer.from(g.SECRET_BLOCK,\"base64\"),r.Buffer.from(s,\"utf8\")])),f=a.a.lib.WordArray.create(n),S=N.a.stringify(l()(c,f)),C={};C.USERNAME=i.username,C.PASSWORD_CLAIM_SECRET_BLOCK=g.SECRET_BLOCK,C.TIMESTAMP=s,C.PASSWORD_CLAIM_SIGNATURE=S,null!=i.deviceKey&&(C.DEVICE_KEY=i.deviceKey);var p={ChallengeName:\"PASSWORD_VERIFIER\",ClientId:i.pool.getClientId(),ChallengeResponses:C,Session:h.Session,ClientMetadata:d};i.getUserContextData()&&(p.UserContextData=i.getUserContextData()),function e(t,n){return i.client.request(\"RespondToAuthChallenge\",t,function(s,r){return s&&\"ResourceNotFoundException\"===s.code&&-1!==s.message.toLowerCase().indexOf(\"device\")?(C.DEVICE_KEY=null,i.deviceKey=null,i.randomPassword=null,i.deviceGroupKey=null,i.clearCachedDeviceKeyAndPassword(),e(t,n)):n(s,r)})}(p,function(e,n){return e?t.onFailure(e):i.authenticateUserInternal(n,o,t)})})})})},t.authenticateUserPlainUsernamePassword=function(e,t){var n=this,s={};if(s.USERNAME=this.username,s.PASSWORD=e.getPassword(),s.PASSWORD){var i=new E(this.pool.getUserPoolId().split(\"_\")[1]);this.getCachedDeviceKeyAndPassword(),null!=this.deviceKey&&(s.DEVICE_KEY=this.deviceKey);var r=0!==Object.keys(e.getValidationData()).length?e.getValidationData():e.getClientMetadata(),o={AuthFlow:\"USER_PASSWORD_AUTH\",ClientId:this.pool.getClientId(),AuthParameters:s,ClientMetadata:r};this.getUserContextData(this.username)&&(o.UserContextData=this.getUserContextData(this.username)),this.client.request(\"InitiateAuth\",o,function(e,s){return e?t.onFailure(e):n.authenticateUserInternal(s,i,t)})}else t.onFailure(new Error(\"PASSWORD parameter is required\"))},t.authenticateUserInternal=function(e,t,n){var s=this,i=e.ChallengeName,o=e.ChallengeParameters;if(\"SMS_MFA\"===i)return this.Session=e.Session,n.mfaRequired(i,o);if(\"SELECT_MFA_TYPE\"===i)return this.Session=e.Session,n.selectMFAType(i,o);if(\"MFA_SETUP\"===i)return this.Session=e.Session,n.mfaSetup(i,o);if(\"SOFTWARE_TOKEN_MFA\"===i)return this.Session=e.Session,n.totpRequired(i,o);if(\"CUSTOM_CHALLENGE\"===i)return this.Session=e.Session,n.customChallenge(o);if(\"NEW_PASSWORD_REQUIRED\"===i){this.Session=e.Session;var a=null,u=null,c=[],h=t.getNewPasswordRequiredChallengeUserAttributePrefix();if(o&&(a=JSON.parse(e.ChallengeParameters.userAttributes),u=JSON.parse(e.ChallengeParameters.requiredAttributes)),u)for(var l=0;l<u.length;l++)c[l]=u[l].substr(h.length);return n.newPasswordRequired(a,c)}if(\"DEVICE_SRP_AUTH\"!==i){this.signInUserSession=this.getCognitoUserSession(e.AuthenticationResult),this.challengeName=i,this.cacheTokens();var f=e.AuthenticationResult.NewDeviceMetadata;if(null==f)return n.onSuccess(this.signInUserSession);t.generateHashDevice(e.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey,e.AuthenticationResult.NewDeviceMetadata.DeviceKey,function(i){if(i)return n.onFailure(i);var o={Salt:r.Buffer.from(t.getSaltDevices(),\"hex\").toString(\"base64\"),PasswordVerifier:r.Buffer.from(t.getVerifierDevices(),\"hex\").toString(\"base64\")};s.verifierDevices=o.PasswordVerifier,s.deviceGroupKey=f.DeviceGroupKey,s.randomPassword=t.getRandomPassword(),s.client.request(\"ConfirmDevice\",{DeviceKey:f.DeviceKey,AccessToken:s.signInUserSession.getAccessToken().getJwtToken(),DeviceSecretVerifierConfig:o,DeviceName:H},function(t,i){return t?n.onFailure(t):(s.deviceKey=e.AuthenticationResult.NewDeviceMetadata.DeviceKey,s.cacheDeviceKeyAndPassword(),!0===i.UserConfirmationNecessary?n.onSuccess(s.signInUserSession,i.UserConfirmationNecessary):n.onSuccess(s.signInUserSession))})})}else this.getDeviceResponse(n)},t.completeNewPasswordChallenge=function(e,t,n,s){var i=this;if(!e)return n.onFailure(new Error(\"New password is required.\"));var r=new E(this.pool.getUserPoolId().split(\"_\")[1]),o=r.getNewPasswordRequiredChallengeUserAttributePrefix(),a={};t&&Object.keys(t).forEach(function(e){a[o+e]=t[e]}),a.NEW_PASSWORD=e,a.USERNAME=this.username;var u={ChallengeName:\"NEW_PASSWORD_REQUIRED\",ClientId:this.pool.getClientId(),ChallengeResponses:a,Session:this.Session,ClientMetadata:s};this.getUserContextData()&&(u.UserContextData=this.getUserContextData()),this.client.request(\"RespondToAuthChallenge\",u,function(e,t){return e?n.onFailure(e):i.authenticateUserInternal(t,r,n)})},t.getDeviceResponse=function(e,t){var n=this,s=new E(this.deviceGroupKey),i=new x,o={};o.USERNAME=this.username,o.DEVICE_KEY=this.deviceKey,s.getLargeAValue(function(u,c){u&&e.onFailure(u),o.SRP_A=c.toString(16);var h={ChallengeName:\"DEVICE_SRP_AUTH\",ClientId:n.pool.getClientId(),ChallengeResponses:o,ClientMetadata:t};n.getUserContextData()&&(h.UserContextData=n.getUserContextData()),n.client.request(\"RespondToAuthChallenge\",h,function(t,o){if(t)return e.onFailure(t);var u=o.ChallengeParameters,c=new f(u.SRP_B,16),h=new f(u.SALT,16);s.getPasswordAuthenticationKey(n.deviceKey,n.randomPassword,c,h,function(t,s){if(t)return e.onFailure(t);var c=i.getNowString(),h=a.a.lib.WordArray.create(r.Buffer.concat([r.Buffer.from(n.deviceGroupKey,\"utf8\"),r.Buffer.from(n.deviceKey,\"utf8\"),r.Buffer.from(u.SECRET_BLOCK,\"base64\"),r.Buffer.from(c,\"utf8\")])),f=a.a.lib.WordArray.create(s),g=N.a.stringify(l()(h,f)),d={};d.USERNAME=n.username,d.PASSWORD_CLAIM_SECRET_BLOCK=u.SECRET_BLOCK,d.TIMESTAMP=c,d.PASSWORD_CLAIM_SIGNATURE=g,d.DEVICE_KEY=n.deviceKey;var S={ChallengeName:\"DEVICE_PASSWORD_VERIFIER\",ClientId:n.pool.getClientId(),ChallengeResponses:d,Session:o.Session};n.getUserContextData()&&(S.UserContextData=n.getUserContextData()),n.client.request(\"RespondToAuthChallenge\",S,function(t,s){return t?e.onFailure(t):(n.signInUserSession=n.getCognitoUserSession(s.AuthenticationResult),n.cacheTokens(),e.onSuccess(n.signInUserSession))})})})})},t.confirmRegistration=function(e,t,n,s){var i={ClientId:this.pool.getClientId(),ConfirmationCode:e,Username:this.username,ForceAliasCreation:t,ClientMetadata:s};this.getUserContextData()&&(i.UserContextData=this.getUserContextData()),this.client.request(\"ConfirmSignUp\",i,function(e){return e?n(e,null):n(null,\"SUCCESS\")})},t.sendCustomChallengeAnswer=function(e,t,n){var s=this,i={};i.USERNAME=this.username,i.ANSWER=e;var r=new E(this.pool.getUserPoolId().split(\"_\")[1]);this.getCachedDeviceKeyAndPassword(),null!=this.deviceKey&&(i.DEVICE_KEY=this.deviceKey);var o={ChallengeName:\"CUSTOM_CHALLENGE\",ChallengeResponses:i,ClientId:this.pool.getClientId(),Session:this.Session,ClientMetadata:n};this.getUserContextData()&&(o.UserContextData=this.getUserContextData()),this.client.request(\"RespondToAuthChallenge\",o,function(e,n){return e?t.onFailure(e):s.authenticateUserInternal(n,r,t)})},t.sendMFACode=function(e,t,n,s){var i=this,o={};o.USERNAME=this.username,o.SMS_MFA_CODE=e;var a=n||\"SMS_MFA\";\"SOFTWARE_TOKEN_MFA\"===a&&(o.SOFTWARE_TOKEN_MFA_CODE=e),null!=this.deviceKey&&(o.DEVICE_KEY=this.deviceKey);var u={ChallengeName:a,ChallengeResponses:o,ClientId:this.pool.getClientId(),Session:this.Session,ClientMetadata:s};this.getUserContextData()&&(u.UserContextData=this.getUserContextData()),this.client.request(\"RespondToAuthChallenge\",u,function(e,n){if(e)return t.onFailure(e);if(\"DEVICE_SRP_AUTH\"!==n.ChallengeName){if(i.signInUserSession=i.getCognitoUserSession(n.AuthenticationResult),i.cacheTokens(),null==n.AuthenticationResult.NewDeviceMetadata)return t.onSuccess(i.signInUserSession);var s=new E(i.pool.getUserPoolId().split(\"_\")[1]);s.generateHashDevice(n.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey,n.AuthenticationResult.NewDeviceMetadata.DeviceKey,function(e){if(e)return t.onFailure(e);var o={Salt:r.Buffer.from(s.getSaltDevices(),\"hex\").toString(\"base64\"),PasswordVerifier:r.Buffer.from(s.getVerifierDevices(),\"hex\").toString(\"base64\")};i.verifierDevices=o.PasswordVerifier,i.deviceGroupKey=n.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey,i.randomPassword=s.getRandomPassword(),i.client.request(\"ConfirmDevice\",{DeviceKey:n.AuthenticationResult.NewDeviceMetadata.DeviceKey,AccessToken:i.signInUserSession.getAccessToken().getJwtToken(),DeviceSecretVerifierConfig:o,DeviceName:H},function(e,s){return e?t.onFailure(e):(i.deviceKey=n.AuthenticationResult.NewDeviceMetadata.DeviceKey,i.cacheDeviceKeyAndPassword(),!0===s.UserConfirmationNecessary?t.onSuccess(i.signInUserSession,s.UserConfirmationNecessary):t.onSuccess(i.signInUserSession))})})}else i.getDeviceResponse(t)})},t.changePassword=function(e,t,n,s){if(null==this.signInUserSession||!this.signInUserSession.isValid())return n(new Error(\"User is not authenticated\"),null);this.client.request(\"ChangePassword\",{PreviousPassword:e,ProposedPassword:t,AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),ClientMetadata:s},function(e){return e?n(e,null):n(null,\"SUCCESS\")})},t.enableMFA=function(e){if(null==this.signInUserSession||!this.signInUserSession.isValid())return e(new Error(\"User is not authenticated\"),null);var t=[];t.push({DeliveryMedium:\"SMS\",AttributeName:\"phone_number\"}),this.client.request(\"SetUserSettings\",{MFAOptions:t,AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(t){return t?e(t,null):e(null,\"SUCCESS\")})},t.setUserMfaPreference=function(e,t,n){if(null==this.signInUserSession||!this.signInUserSession.isValid())return n(new Error(\"User is not authenticated\"),null);this.client.request(\"SetUserMFAPreference\",{SMSMfaSettings:e,SoftwareTokenMfaSettings:t,AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(e){return e?n(e,null):n(null,\"SUCCESS\")})},t.disableMFA=function(e){if(null==this.signInUserSession||!this.signInUserSession.isValid())return e(new Error(\"User is not authenticated\"),null);this.client.request(\"SetUserSettings\",{MFAOptions:[],AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(t){return t?e(t,null):e(null,\"SUCCESS\")})},t.deleteUser=function(e,t){var n=this;if(null==this.signInUserSession||!this.signInUserSession.isValid())return e(new Error(\"User is not authenticated\"),null);this.client.request(\"DeleteUser\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),ClientMetadata:t},function(t){return t?e(t,null):(n.clearCachedUser(),e(null,\"SUCCESS\"))})},t.updateAttributes=function(e,t,n){var s=this;if(null==this.signInUserSession||!this.signInUserSession.isValid())return t(new Error(\"User is not authenticated\"),null);this.client.request(\"UpdateUserAttributes\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),UserAttributes:e,ClientMetadata:n},function(e){return e?t(e,null):s.getUserData(function(){return t(null,\"SUCCESS\")},{bypassCache:!0})})},t.getUserAttributes=function(e){if(null==this.signInUserSession||!this.signInUserSession.isValid())return e(new Error(\"User is not authenticated\"),null);this.client.request(\"GetUser\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(t,n){if(t)return e(t,null);for(var s=[],i=0;i<n.UserAttributes.length;i++){var r={Name:n.UserAttributes[i].Name,Value:n.UserAttributes[i].Value},o=new _(r);s.push(o)}return e(null,s)})},t.getMFAOptions=function(e){if(null==this.signInUserSession||!this.signInUserSession.isValid())return e(new Error(\"User is not authenticated\"),null);this.client.request(\"GetUser\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(t,n){return t?e(t,null):e(null,n.MFAOptions)})},t.getUserData=function(e,t){var n=this;if(null==this.signInUserSession||!this.signInUserSession.isValid())return this.clearCachedUserData(),e(new Error(\"User is not authenticated\"),null);var s=!!t&&t.bypassCache,i=this.storage.getItem(this.userDataKey);if(!i||s)this.client.request(\"GetUser\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(t,s){if(t)return e(t,null);n.cacheUserData(s);var i=n.signInUserSession.getRefreshToken();if(!i||!i.getToken())return e(null,s);n.refreshSession(i,function(t,n){return t?e(t,null):e(null,s)})});else try{return e(null,JSON.parse(i))}catch(t){return this.clearCachedUserData(),e(t,null)}},t.deleteAttributes=function(e,t){if(null==this.signInUserSession||!this.signInUserSession.isValid())return t(new Error(\"User is not authenticated\"),null);this.client.request(\"DeleteUserAttributes\",{UserAttributeNames:e,AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(e){return e?t(e,null):t(null,\"SUCCESS\")})},t.resendConfirmationCode=function(e,t){var n={ClientId:this.pool.getClientId(),Username:this.username,ClientMetadata:t};this.client.request(\"ResendConfirmationCode\",n,function(t,n){return t?e(t,null):e(null,n)})},t.getSession=function(e){if(null==this.username)return e(new Error(\"Username is null. Cannot retrieve a new session\"),null);if(null!=this.signInUserSession&&this.signInUserSession.isValid())return e(null,this.signInUserSession);var t=\"CognitoIdentityServiceProvider.\"+this.pool.getClientId()+\".\"+this.username,n=t+\".idToken\",s=t+\".accessToken\",i=t+\".refreshToken\",r=t+\".clockDrift\";if(this.storage.getItem(n)){var o=new P({IdToken:this.storage.getItem(n)}),a=new k({AccessToken:this.storage.getItem(s)}),u=new R({RefreshToken:this.storage.getItem(i)}),c=parseInt(this.storage.getItem(r),0)||0,h=new B({IdToken:o,AccessToken:a,RefreshToken:u,ClockDrift:c});if(h.isValid())return this.signInUserSession=h,e(null,this.signInUserSession);if(!u.getToken())return e(new Error(\"Cannot retrieve a new session. Please authenticate.\"),null);this.refreshSession(u,e)}else e(new Error(\"Local storage is missing an ID Token, Please authenticate\"),null)},t.refreshSession=function(e,t,n){var s=this,i={};i.REFRESH_TOKEN=e.getToken();var r=\"CognitoIdentityServiceProvider.\"+this.pool.getClientId(),o=r+\".LastAuthUser\";if(this.storage.getItem(o)){this.username=this.storage.getItem(o);var a=r+\".\"+this.username+\".deviceKey\";this.deviceKey=this.storage.getItem(a),i.DEVICE_KEY=this.deviceKey}var u={ClientId:this.pool.getClientId(),AuthFlow:\"REFRESH_TOKEN_AUTH\",AuthParameters:i,ClientMetadata:n};this.getUserContextData()&&(u.UserContextData=this.getUserContextData()),this.client.request(\"InitiateAuth\",u,function(n,i){if(n)return\"NotAuthorizedException\"===n.code&&s.clearCachedUser(),t(n,null);if(i){var r=i.AuthenticationResult;return Object.prototype.hasOwnProperty.call(r,\"RefreshToken\")||(r.RefreshToken=e.getToken()),s.signInUserSession=s.getCognitoUserSession(r),s.cacheTokens(),t(null,s.signInUserSession)}})},t.cacheTokens=function(){var e=\"CognitoIdentityServiceProvider.\"+this.pool.getClientId(),t=e+\".\"+this.username+\".idToken\",n=e+\".\"+this.username+\".accessToken\",s=e+\".\"+this.username+\".refreshToken\",i=e+\".\"+this.username+\".clockDrift\",r=e+\".LastAuthUser\";this.storage.setItem(t,this.signInUserSession.getIdToken().getJwtToken()),this.storage.setItem(n,this.signInUserSession.getAccessToken().getJwtToken()),this.storage.setItem(s,this.signInUserSession.getRefreshToken().getToken()),this.storage.setItem(i,\"\"+this.signInUserSession.getClockDrift()),this.storage.setItem(r,this.username)},t.cacheUserData=function(e){this.storage.setItem(this.userDataKey,JSON.stringify(e))},t.clearCachedUserData=function(){this.storage.removeItem(this.userDataKey)},t.clearCachedUser=function(){this.clearCachedTokens(),this.clearCachedUserData()},t.cacheDeviceKeyAndPassword=function(){var e=\"CognitoIdentityServiceProvider.\"+this.pool.getClientId()+\".\"+this.username,t=e+\".deviceKey\",n=e+\".randomPasswordKey\",s=e+\".deviceGroupKey\";this.storage.setItem(t,this.deviceKey),this.storage.setItem(n,this.randomPassword),this.storage.setItem(s,this.deviceGroupKey)},t.getCachedDeviceKeyAndPassword=function(){var e=\"CognitoIdentityServiceProvider.\"+this.pool.getClientId()+\".\"+this.username,t=e+\".deviceKey\",n=e+\".randomPasswordKey\",s=e+\".deviceGroupKey\";this.storage.getItem(t)&&(this.deviceKey=this.storage.getItem(t),this.randomPassword=this.storage.getItem(n),this.deviceGroupKey=this.storage.getItem(s))},t.clearCachedDeviceKeyAndPassword=function(){var e=\"CognitoIdentityServiceProvider.\"+this.pool.getClientId()+\".\"+this.username,t=e+\".deviceKey\",n=e+\".randomPasswordKey\",s=e+\".deviceGroupKey\";this.storage.removeItem(t),this.storage.removeItem(n),this.storage.removeItem(s)},t.clearCachedTokens=function(){var e=\"CognitoIdentityServiceProvider.\"+this.pool.getClientId(),t=e+\".\"+this.username+\".idToken\",n=e+\".\"+this.username+\".accessToken\",s=e+\".\"+this.username+\".refreshToken\",i=e+\".LastAuthUser\",r=e+\".\"+this.username+\".clockDrift\";this.storage.removeItem(t),this.storage.removeItem(n),this.storage.removeItem(s),this.storage.removeItem(i),this.storage.removeItem(r)},t.getCognitoUserSession=function(e){var t=new P(e),n=new k(e),s=new R(e);return new B({IdToken:t,AccessToken:n,RefreshToken:s})},t.forgotPassword=function(e,t){var n={ClientId:this.pool.getClientId(),Username:this.username,ClientMetadata:t};this.getUserContextData()&&(n.UserContextData=this.getUserContextData()),this.client.request(\"ForgotPassword\",n,function(t,n){return t?e.onFailure(t):\"function\"===typeof e.inputVerificationCode?e.inputVerificationCode(n):e.onSuccess(n)})},t.confirmPassword=function(e,t,n,s){var i={ClientId:this.pool.getClientId(),Username:this.username,ConfirmationCode:e,Password:t,ClientMetadata:s};this.getUserContextData()&&(i.UserContextData=this.getUserContextData()),this.client.request(\"ConfirmForgotPassword\",i,function(e){return e?n.onFailure(e):n.onSuccess()})},t.getAttributeVerificationCode=function(e,t,n){if(null==this.signInUserSession||!this.signInUserSession.isValid())return t.onFailure(new Error(\"User is not authenticated\"));this.client.request(\"GetUserAttributeVerificationCode\",{AttributeName:e,AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),ClientMetadata:n},function(e,n){return e?t.onFailure(e):\"function\"===typeof t.inputVerificationCode?t.inputVerificationCode(n):t.onSuccess()})},t.verifyAttribute=function(e,t,n){if(null==this.signInUserSession||!this.signInUserSession.isValid())return n.onFailure(new Error(\"User is not authenticated\"));this.client.request(\"VerifyUserAttribute\",{AttributeName:e,Code:t,AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(e){return e?n.onFailure(e):n.onSuccess(\"SUCCESS\")})},t.getDevice=function(e){if(null==this.signInUserSession||!this.signInUserSession.isValid())return e.onFailure(new Error(\"User is not authenticated\"));this.client.request(\"GetDevice\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),DeviceKey:this.deviceKey},function(t,n){return t?e.onFailure(t):e.onSuccess(n)})},t.forgetSpecificDevice=function(e,t){if(null==this.signInUserSession||!this.signInUserSession.isValid())return t.onFailure(new Error(\"User is not authenticated\"));this.client.request(\"ForgetDevice\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),DeviceKey:e},function(e){return e?t.onFailure(e):t.onSuccess(\"SUCCESS\")})},t.forgetDevice=function(e){var t=this;this.forgetSpecificDevice(this.deviceKey,{onFailure:e.onFailure,onSuccess:function(n){return t.deviceKey=null,t.deviceGroupKey=null,t.randomPassword=null,t.clearCachedDeviceKeyAndPassword(),e.onSuccess(n)}})},t.setDeviceStatusRemembered=function(e){if(null==this.signInUserSession||!this.signInUserSession.isValid())return e.onFailure(new Error(\"User is not authenticated\"));this.client.request(\"UpdateDeviceStatus\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),DeviceKey:this.deviceKey,DeviceRememberedStatus:\"remembered\"},function(t){return t?e.onFailure(t):e.onSuccess(\"SUCCESS\")})},t.setDeviceStatusNotRemembered=function(e){if(null==this.signInUserSession||!this.signInUserSession.isValid())return e.onFailure(new Error(\"User is not authenticated\"));this.client.request(\"UpdateDeviceStatus\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),DeviceKey:this.deviceKey,DeviceRememberedStatus:\"not_remembered\"},function(t){return t?e.onFailure(t):e.onSuccess(\"SUCCESS\")})},t.listDevices=function(e,t,n){if(null==this.signInUserSession||!this.signInUserSession.isValid())return n.onFailure(new Error(\"User is not authenticated\"));this.client.request(\"ListDevices\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),Limit:e,PaginationToken:t},function(e,t){return e?n.onFailure(e):n.onSuccess(t)})},t.globalSignOut=function(e){var t=this;if(null==this.signInUserSession||!this.signInUserSession.isValid())return e.onFailure(new Error(\"User is not authenticated\"));this.client.request(\"GlobalSignOut\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(n){return n?e.onFailure(n):(t.clearCachedUser(),e.onSuccess(\"SUCCESS\"))})},t.signOut=function(){this.signInUserSession=null,this.clearCachedUser()},t.sendMFASelectionAnswer=function(e,t){var n=this,s={};s.USERNAME=this.username,s.ANSWER=e;var i={ChallengeName:\"SELECT_MFA_TYPE\",ChallengeResponses:s,ClientId:this.pool.getClientId(),Session:this.Session};this.getUserContextData()&&(i.UserContextData=this.getUserContextData()),this.client.request(\"RespondToAuthChallenge\",i,function(s,i){return s?t.onFailure(s):(n.Session=i.Session,\"SMS_MFA\"===e?t.mfaRequired(i.challengeName,i.challengeParameters):\"SOFTWARE_TOKEN_MFA\"===e?t.totpRequired(i.challengeName,i.challengeParameters):void 0)})},t.getUserContextData=function(){return this.pool.getUserContextData(this.username)},t.associateSoftwareToken=function(e){var t=this;null!=this.signInUserSession&&this.signInUserSession.isValid()?this.client.request(\"AssociateSoftwareToken\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(t,n){return t?e.onFailure(t):e.associateSecretCode(n.SecretCode)}):this.client.request(\"AssociateSoftwareToken\",{Session:this.Session},function(n,s){return n?e.onFailure(n):(t.Session=s.Session,e.associateSecretCode(s.SecretCode))})},t.verifySoftwareToken=function(e,t,n){var s=this;null!=this.signInUserSession&&this.signInUserSession.isValid()?this.client.request(\"VerifySoftwareToken\",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),UserCode:e,FriendlyDeviceName:t},function(e,t){return e?n.onFailure(e):n.onSuccess(t)}):this.client.request(\"VerifySoftwareToken\",{Session:this.Session,UserCode:e,FriendlyDeviceName:t},function(e,t){if(e)return n.onFailure(e);s.Session=t.Session;var i={};i.USERNAME=s.username;var r={ChallengeName:\"MFA_SETUP\",ClientId:s.pool.getClientId(),ChallengeResponses:i,Session:s.Session};s.getUserContextData()&&(r.UserContextData=s.getUserContextData()),s.client.request(\"RespondToAuthChallenge\",r,function(e,t){return e?n.onFailure(e):(s.signInUserSession=s.getCognitoUserSession(t.AuthenticationResult),s.cacheTokens(),n.onSuccess(s.signInUserSession))})})},e}();function J(){}J.prototype.userAgent=\"aws-amplify/0.1.x js\";var L=function(e){e&&(J.prototype.userAgent&&!J.prototype.userAgent.includes(e)&&(J.prototype.userAgent=J.prototype.userAgent.concat(\" \",e)),J.prototype.userAgent&&\"\"!==J.prototype.userAgent||(J.prototype.userAgent=e))},G=J,j=function(){function e(e,t){this.endpoint=t||\"https://cognito-idp.\"+e+\".amazonaws.com/\"}return e.prototype.request=function(e,t,n){var s,i={headers:{\"Content-Type\":\"application/x-amz-json-1.1\",\"X-Amz-Target\":\"AWSCognitoIdentityProviderService.\"+e,\"X-Amz-User-Agent\":G.prototype.userAgent},method:\"POST\",mode:\"cors\",cache:\"no-cache\",body:JSON.stringify(t)};fetch(this.endpoint,i).then(function(e){return s=e,e},function(e){if(e instanceof TypeError)throw new Error(\"Network error\");throw e}).then(function(e){return e.json().catch(function(){return{}})}).then(function(e){if(s.ok)return n(null,e);e;var t=(e.__type||e.code).split(\"#\").pop(),i={code:t,name:t,message:e.message||e.Message||null};return n(i)}).catch(function(e){if(!(s&&s.headers&&s.headers.get(\"x-amzn-errortype\"))){if(e instanceof Error&&\"Network error\"===e.message){var t={code:\"NetworkError\",name:e.name,message:e.message};return n(t)}return n(e)}try{var i=s.headers.get(\"x-amzn-errortype\").split(\":\")[0],r={code:i,name:i,statusCode:s.status,message:s.status?s.status.toString():null};return n(r)}catch(t){return n(e)}})},e}(),z=function(){function e(e){var t=e||{},n=t.UserPoolId,s=t.ClientId,i=t.endpoint,r=t.AdvancedSecurityDataCollectionFlag;if(!n||!s)throw new Error(\"Both UserPoolId and ClientId are required.\");if(!/^[\\w-]+_.+$/.test(n))throw new Error(\"Invalid UserPoolId format.\");var o=n.split(\"_\")[0];this.userPoolId=n,this.clientId=s,this.client=new j(o,i),this.advancedSecurityDataCollectionFlag=!1!==r,this.storage=e.Storage||(new q).getStorage()}var t=e.prototype;return t.getUserPoolId=function(){return this.userPoolId},t.getClientId=function(){return this.clientId},t.signUp=function(e,t,n,s,i,r){var o=this,a={ClientId:this.clientId,Username:e,Password:t,UserAttributes:n,ValidationData:s,ClientMetadata:r};this.getUserContextData(e)&&(a.UserContextData=this.getUserContextData(e)),this.client.request(\"SignUp\",a,function(t,n){if(t)return i(t,null);var s={Username:e,Pool:o,Storage:o.storage},r={user:new W(s),userConfirmed:n.UserConfirmed,userSub:n.UserSub,codeDeliveryDetails:n.CodeDeliveryDetails};return i(null,r)})},t.getCurrentUser=function(){var e=\"CognitoIdentityServiceProvider.\"+this.clientId+\".LastAuthUser\",t=this.storage.getItem(e);if(t){var n={Username:t,Pool:this,Storage:this.storage};return new W(n)}return null},t.getUserContextData=function(e){if(\"undefined\"!==typeof AmazonCognitoAdvancedSecurityData){var t=AmazonCognitoAdvancedSecurityData;if(this.advancedSecurityDataCollectionFlag){var n=t.getData(e,this.userPoolId,this.clientId);if(n)return{EncodedData:n}}return{}}},e}(),Y=n(\"f53a66fb701477ccb562\"),Z=function(){function e(e){if(!e.domain)throw new Error(\"The domain of cookieStorage can not be undefined.\");this.domain=e.domain,e.path?this.path=e.path:this.path=\"/\",Object.prototype.hasOwnProperty.call(e,\"expires\")?this.expires=e.expires:this.expires=365,Object.prototype.hasOwnProperty.call(e,\"secure\")?this.secure=e.secure:this.secure=!0}var t=e.prototype;return t.setItem=function(e,t){return Y.set(e,t,{path:this.path,expires:this.expires,domain:this.domain,secure:this.secure}),Y.get(e)},t.getItem=function(e){return Y.get(e)},t.removeItem=function(e){return Y.remove(e,{path:this.path,domain:this.domain,secure:this.secure})},t.clear=function(){var e,t=Y.get();for(e=0;e<t.length;++e)Y.remove(t[e]);return{}},e}();n.d(t,\"AuthenticationDetails\",function(){return i}),n.d(t,\"AuthenticationHelper\",function(){return E}),n.d(t,\"CognitoAccessToken\",function(){return k}),n.d(t,\"CognitoIdToken\",function(){return P}),n.d(t,\"CognitoRefreshToken\",function(){return R}),n.d(t,\"CognitoUser\",function(){return W}),n.d(t,\"CognitoUserAttribute\",function(){return _}),n.d(t,\"CognitoUserPool\",function(){return z}),n.d(t,\"CognitoUserSession\",function(){return B}),n.d(t,\"CookieStorage\",function(){return Z}),n.d(t,\"DateHelper\",function(){return x}),n.d(t,\"appendToCognitoUserAgent\",function(){return L})}}]);","extractedComments":[]}